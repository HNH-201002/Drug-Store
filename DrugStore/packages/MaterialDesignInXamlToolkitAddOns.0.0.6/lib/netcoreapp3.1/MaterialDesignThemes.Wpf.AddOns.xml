<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MaterialDesignThemes.Wpf.AddOns</name>
    </assembly>
    <members>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Banner">
            <summary>
            A banner to display messages with one or two action buttons.
            </summary>
            <remarks>Overrides MD's snackbar, which has the similar behavior.</remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Banner.#ctor">
            <summary>
            Creates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.Banner"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Banner.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.Banner"/> type.
            Override some base dependency properties.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Banner.Close(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the banner must be closed.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Banner.MessageQueue">
            <summary>
            MessageQueue property override to match our own message queue <see cref="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue"/> type.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Banner.MessageQueueProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.Banner.MessageQueue"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Banner.MessageQueuePropertyChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Override of base private handler so we correctly pair to our own definition of <see cref="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue"/>.
            </summary>
            <param name="dependencyObject">Banner that triggered the event.</param>
            <param name="dependencyPropertyChangedEventArgs">New property value information.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Banner.SecondaryActionButtonStyle">
            <summary>
            Gets or sets the style to be applied to the secondary button.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Banner.SecondaryActionButtonStyleProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.Banner.SecondaryActionButtonStyle"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Banner.AreActionButtonPositionsInverted">
            <summary>
            Gets or sets a value indicating if the action buttons must be inverted in template.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Banner.AreActionButtonPositionsInvertedProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.Banner.AreActionButtonPositionsInverted"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Banner.DismissOnActionButtonClick">
            <summary>
            Gets or sets a value indicating if dismissing is active when clicking action buttons (defaults to true).
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Banner.DismissOnActionButtonClickProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.Banner.DismissOnActionButtonClick"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Banner.DismissOnActionButtonClickChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.Banner.DismissOnActionButtonClick"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Banner.RegisterDismissOnClickEvents">
            <summary>
            Registers event handlers for message clicks management.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Banner.UnregisterDismissOnClickEvents">
            <summary>
            Clear event handlers for message clicks management.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.BrushItem">
            <summary>
            A item that represents a given color with 
            an optional name and an opacity.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.BrushName">
            <summary>
            Gets the brush name.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.Brush">
            <summary>
            Gets the brush.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.Color">
            <summary>
            Gets the color associated to the brush, if any.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.AsSolidColorBrush">
            <summary>
            Gets <see cref="T:System.Windows.Media.SolidColorBrush"/> value of the stored color.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.BrushItem.AsSolidColorBrushProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.AsSolidColorBrush"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.AsRgbText">
            <summary>
            Gets a simplified string representation of the stored color.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.BrushItem.AsRgbTextProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.AsRgbText"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.AsArgbText">
            <summary>
            Gets a string representation of the stored color with alpha representation.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.BrushItem.AsArgbTextProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.AsArgbText"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.BrushOpacity">
            <summary>
            Gets the opacity of the brush. 
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.BrushItem.BrushOpacityProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.BrushOpacity"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.IsSelected">
            <summary>
            Gets or sets a value indicating if the item is 
            selected or not.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.BrushItem.IsSelectedProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.BrushItem.IsSelected"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.BrushItem.#ctor(System.Windows.Media.Color,System.Double,System.String)">
            <summary>
            Creates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.BrushItem"/>.
            </summary>
            <param name="color">The color to be stored.</param>
            <param name="opacity">The opacity of the .</param>
            <param name="name">An optional name to be given to the color.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.BrushItem.#ctor(System.Windows.Media.Brush,System.String)">
            <summary>
            Creates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.BrushItem"/>.
            </summary>
            <param name="brush">The brush to be stored.</param>
            <param name="name">An optional name to be given to the color.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.BrushItem.SetBrushOpacity(System.Double)">
            <summary>
            Sets the opacity of the brush item.
            </summary>
            <param name="newValue">The new opacity value.</param>
            <returns>Returns true if opacity was successfully changed.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.BrushItem.SetBrushName(System.String)">
            <summary>
            Sets a name for the brush item.
            </summary>
            <param name="newName">The new name value.</param>
            <returns>Returns true if brush name was successfully changed.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.BrushItem.ReevaluateSolidColorBrush">
            <summary>
            Recreates a solid color brush that fits current parameters.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.BrushItem.ToString">
            <summary>
            Gets the color as an aRGB string.
            </summary>
            <returns>The hold color as an aRGB string.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.ButtonIconPlacement">
            <summary>
            Represents placement of the icon for a <see cref="T:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon"/>.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ButtonIconPlacement.Lead">
            <summary>
            Icon is placed on the left of the content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ButtonIconPlacement.Trail">
            <summary>
            Icon is placed on the right of the content.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon">
            <summary>
            A button allowing to insert an icon 
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.ContentTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.Icon">
            <summary>
            Gets or sets the icon to be displayed next to button content.
            </summary>
            <remarks>Setting this property will override <see cref="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconKind"/> and <see cref="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconSize"/>.</remarks>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.Icon"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.Icon"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconKind">
            <summary>
            Gets or sets the kind of the icon to be displayed next to button content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconKindProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconKind"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconPlacement">
            <summary>
            Gets or sets the icon to be displayed next to button content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconPlacementProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconPlacement"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconSpacing">
            <summary>
            Gets or sets the margin of the icon towards button's content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconSpacingProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconSpacing"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconSize">
            <summary>
            Gets or sets the size of the icon.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconSizeProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconSize"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.ContentMargin">
            <summary>
            Gets or sets the margin of the main button content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.ContentMarginProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.ContentMargin"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ButtonWithIcon.IconRelatedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever a dependency property related to the added icon is modified.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Converters.BorderClipConverter">
            <summary>
            Gets a geometry that matches round borders of a visual.
            </summary>
            <remarks>A public implementation of the same internal converter found in http://materialdesigninxaml.net/</remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Converters.BorderClipConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
             Converts a geometry that matches round borders.
            </summary>
            <param name="values">In the order: Width, Height, CornerRadius and BorderThickness of the element to construct.</param>
            <param name="targetType">Unused.</param>
            <param name="parameter">Unused.</param>
            <param name="culture">Unused.</param>
            <returns>A geometry to be used for clipping of round visuals.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Converters.BorderClipConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Unused.
            </summary>
            <param name="value">Unused.</param>
            <param name="targetTypes">Unused.</param>
            <param name="parameter">Unused.</param>
            <param name="culture">Unused.</param>
            <returns>Unused.</returns>
            <exception cref="T:System.NotImplementedException">Will throw everytime this method is called.</exception>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Converters.MessageActionPlacementConverter">
            <summary>
            Output suitable dockpanel positioning for the action buttons.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Converters.MessageActionPlacementConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a set of input values into a <see cref="T:System.Windows.Controls.Dock"/> placement.
            </summary>
            <param name="values">Different input values, see code for meaning.</param>
            <param name="targetType">Unused.</param>
            <param name="parameter">Unused.</param>
            <param name="culture">Unused.</param>
            <returns>A suitable <see cref="T:System.Windows.Controls.Dock"/> placement for the action buttons.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Converters.MessageActionPlacementConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Unimplemented convert back method.
            </summary>
            <param name="value">Unused.</param>
            <param name="targetTypes">Unused.</param>
            <param name="parameter">Unused.</param>
            <param name="culture">Unused.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker">
            <summary>
            A color picker that offers users a selection of predefined colors to be picked up,
            or to define its own color or select from a preset of custom colors or from a a preset
            of system colors. 
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker"/> type.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.#ctor">
            <summary>
            Creates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CustomColorPicker_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the control is loaded and bindings are resolved. End some initialization here.
            </summary>
            <param name="sender">Unused. The object that triggered the loaded event.</param>
            <param name="e">unused.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanSetSelectedColorOpacity">
            <summary>
            Gets or sets a value indicating if the opacity of the
            selected color can be set.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanSetSelectedColorOpacityProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanSetSelectedColorOpacity"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanSetSelectedColorOpacityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanSetSelectedColorOpacity"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanChooseCustomColor">
            <summary>
            Gets or sets a value indicating if custom colors
            can be picked by the user.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanChooseCustomColorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanChooseCustomColor"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanChooseCustomColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanChooseCustomColor"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanSelectFromSystemColors">
            <summary>
            Gets or sets a value indicating is user can pick custom colors from system brushes.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanSelectFromSystemColorsProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CanSelectFromSystemColors"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsOpen">
            <summary>
            Gets or sets a value indicating if the control is open.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsOpenProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsOpen"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsOpenChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:System.Windows.UIElement.IsEnabled"/> or <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsOpen"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.OpenCommand">
            <summary>
            Gets the command to 'open' the current item.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColorOpacity">
            <summary>
            Gets or sets the opacity of the resulting color.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColorOpacityProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColorOpacity"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColorOpacityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColorOpacity"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.ResetSelectedColorOpacity">
            <summary>
            Changes the opacity of the selected color.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SystemBrushItems">
            <summary>
            Gets the list of system colors as <see cref="T:MaterialDesignThemes.Wpf.AddOns.BrushItem"/> objects.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.GenerateSystemBrushItemsFromBrushes">
            <summary>
            Generates the list of system colors.
            </summary>
            <returns>A list of system colors as <see cref="T:MaterialDesignThemes.Wpf.AddOns.BrushItem"/> objects.</returns>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedSystemBrushItem">
            <summary>
            Gets or sets the selected brush item from system colors.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedSystemBrushItemProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedSystemBrushItem"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedSystemBrushItemChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedSystemBrushItem"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.AppWideCustomColorsFeed">
            <summary>
            Stores the list of all custom colors for the app domain.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CustomColors">
            <summary>
            Gets or sets the list of recently created custom colors.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CustomColorsProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CustomColors"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CustomColorsFeed">
            <summary>
            Gets or sets a feed of values to be set as custom colors.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CustomColorsFeedProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CustomColorsFeed"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.MaxCustomColorCount">
            <summary>
            Gets or sets the maximum authorized count for custom colors.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.MaxCustomColorCountProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.MaxCustomColorCount"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CustomColorsRelatedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.CustomColors"/> or <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.MaxCustomColorCount"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.AddCustomColorCommand">
            <summary>
            Gets the command to validate the addition of a custom color.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.AddCurrentlyPickedCustomColor">
            <summary>
            Adds the currently previewed color to the custom color list and selects it.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.ShowCustomColorPickingCommand">
            <summary>
            Gets the command to toggle view to custom color picking.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.HideCustomColorPickingCommand">
            <summary>
            Gets the command to toggle view to predefined color picking
            without doing any custom color additions.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsCustomColorPickingShown">
            <summary>
            Gets or sets a value indicating if the custom color picker is displayed.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsCustomColorPickingShownProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsCustomColorPickingShown"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsCustomColorPickingShownChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsCustomColorPickingShown"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedCustomColor">
            <summary>
            Gets or sets a custom color to be previewed.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedCustomColorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedCustomColor"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedCustomColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedCustomColor"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedCustomSolidColorBrush">
            <summary>
            Gets <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedCustomColor"/> as a <see cref="T:System.Windows.Media.SolidColorBrush"/>.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedCustomSolidColorBrushProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedCustomSolidColorBrush"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedBrushAsText">
            <summary>
            Gets or sets the color that was selected, as a <see cref="T:System.String"/> in hexadecimal format.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedBrushAsTextProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedBrushAsText"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedBrushAsTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PreviewedBrushAsText"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.ResetCustomColor">
            <summary>
            Resets the custom color preview to a new value.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.LoadCustomColorFeed">
            <summary>
            Loads custom color from a feed.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SaveSelectedIntoCustomColorFeed">
            <summary>
            Save new selected custom color into the feed.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsLightColorSelected">
            <summary>
            Gets or sets a value indicating if the light colors group is shown or not.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsLightColorSelectedProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsLightColorSelected"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsMediumColorSelected">
            <summary>
            Gets or sets a value indicating if the middle luminosity colors group is shown or not.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsMediumColorSelectedProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsMediumColorSelected"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsDarkColorSelected">
            <summary>
            Gets or sets a value indicating if the dark colors group is shown or not.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsDarkColorSelectedProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsDarkColorSelected"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsGrayColorSelected">
            <summary>
            Gets or sets a value indicating if the gray scale colors group is shown or not.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsGrayColorSelectedProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsGrayColorSelected"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.LightColorItems">
            <summary>
            Gets the list of light color brush items.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.MediumColorItems">
            <summary>
            Gets the list of medium color brush items.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.DarkColorItems">
            <summary>
            Gets the list of dark color items.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.GrayColorItems">
            <summary>
            Gets the list of gray scale color brush items.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PredefinedColorsCount">
            <summary>
            Determines the number of Hue/saturation level we should display.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PredefinedColorsCountProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PredefinedColorsCount"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PredefinedColors">
            <summary>
            Gets a list of predefined colors, whose values matches the currently
            selected 'lightness' of color group.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PredefinedColorsProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PredefinedColors"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PredefinedColorsCountChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.PredefinedColorsCount"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsLightColorSelectedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsLightColorSelected"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsMediumColorSelectedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsMediumColorSelected"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsDarkColorSelectedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsDarkColorSelected"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsGrayColorSelectedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.IsGrayColorSelected"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SetPredefinedColorGroup(System.Collections.Generic.List{MaterialDesignThemes.Wpf.AddOns.BrushItem})">
            <summary>
            Sets the main color group with the passed new selection.
            </summary>
            <param name="newSelection">The new predefined color group to be displayed.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.ResetPredefinedColors">
            <summary>
            Resets items of the various predefined groups. 
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.GenerateColorGroup(System.UInt32,System.Int32,System.Int32)">
            <summary>
            Generates a specific set of colors based on specific passed parameters.
            </summary>
            <param name="count">Number of items to be generated.</param>
            <param name="luminosityLevel">The luminosity level to be applied to all colors in the generated group.</param>
            <param name="saturationLevel">The saturation level colors should have.</param>
            <returns>A list of predefined brush items.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.GenerateGrayColorGroup(System.UInt32)">
            <summary>
            Generates a set a gray scale colors in a group.
            </summary>
            <param name="count">Number of items to be generated.</param>
            <returns>A list of predefined brush items.</returns>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectColorCommand">
            <summary>
            Gets the command for color selection.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedBrushItems">
            <summary>
            Stores the list of selected brush items, when they are both available as custom, predefined, etc.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedBrushItem">
            <summary>
            Gets the selected brush item.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedBrushItemProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedBrushItem"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedBrushItemChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedBrushItem"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColor">
            <summary>
            Gets or sets the selected color item.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColor"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColor"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedSolidColorBrush">
            <summary>
            Gets or sets the color that was selected, as a <see cref="T:System.Windows.Media.SolidColorBrush"/>.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedSolidColorBrushProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedSolidColorBrush"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedSolidColorBrushChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedSolidColorBrush"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColorAsText">
            <summary>
            Gets or sets the color that was selected, as a <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColorAsTextProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColorAsText"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColorAsTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectedColorAsText"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.UnselectBrushItem(MaterialDesignThemes.Wpf.AddOns.BrushItem)">
            <summary>
            Sets a specific <see cref="T:MaterialDesignThemes.Wpf.AddOns.BrushItem"/> as unselected.
            </summary>
            <param name="brushItem">The brush item to deselect.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.UnselectAllPredefined">
            <summary>
            Unselect any predefined item.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.UnselectAllCustom">
            <summary>
            Unselect any custom item.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectBrushItem(MaterialDesignThemes.Wpf.AddOns.BrushItem)">
            <summary>
            Selects a specific brush item.
            </summary>
            <param name="brushItem">The brush item to be selected.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectAllMatchingPredefined">
            <summary>
            Selects all brush items that would match the currently selected brush item.
            </summary>
            <returns>True if at least an item matched in the predefined lists.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.SelectInCustom">
            <summary>
            Selects any custom colors that would match the current selected item brush.
            </summary>
            <returns>True if any matched in custom colors.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.CustomColorPicker.OnSelectionChanged">
            <summary>
            Manages a color selection change by the user.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Extensions.CollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Type"/> class.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.CollectionExtensions.GetGenericType(System.Collections.IEnumerable)">
            <summary>
            Gets the generic underlying type of a collection.
            </summary>
            <param name="enumerable">A collection to be processed.</param>
            <returns>The first degree type of the collection.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.CollectionExtensions.AreItemsINotifyPropertyChanged(System.Collections.IEnumerable)">
            <summary>
            Indicates if the underlying generic type of a collection implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
            <param name="enumerable">A collection to be processed.</param>
            <returns>True if items implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>, false otherwise
            or if no items or underlying generic type.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Extensions.DataGridExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Windows.Controls.DataGrid"/> class.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.DataGridExtensions.GetDataGridCell(System.Windows.Controls.DataGrid,System.Int32,System.Int32)">
            <summary>
            Returns the <see cref="T:System.Windows.Controls.DataGridCell"/> from a <see cref="T:System.Windows.Controls.DataGrid"/>
            </summary>
            <param name="dataGrid">The DataGrid on which to find the cell.</param>
            <param name="rowIndex">The raw row index where to find the cell.</param>
            <param name="columnIndex">The raw column index where to find the cell.</param>
            <returns>A corresponding <see cref="T:System.Windows.Controls.DataGridCell"/>, or null if not found at coordinates.</returns>
            <remarks>Adapted from https://stackoverflow.com/questions/1755799/beginedit-of-a-specific-cell-from-code-behind </remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.DataGridExtensions.GetDataGridRow(System.Windows.Controls.DataGrid,System.Int32)">
            <summary>
            Gets a <see cref="T:System.Windows.Controls.DataGridRow"/> from a <see cref="T:System.Windows.Controls.DataGrid"/>.
            </summary>
            <param name="dataGrid">The DataGrid on which to find the row.</param>
            <param name="index">The index where to find the row.</param>
            <returns>A corresponding <see cref="T:System.Windows.Controls.DataGridRow"/> or null if not found.</returns>
            <remarks>Adapted from https://stackoverflow.com/questions/1755799/beginedit-of-a-specific-cell-from-code-behind</remarks>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Extensions.DependencyObjectExtensions">
            <summary>
            Extensions for <see cref="T:System.Windows.FrameworkElement"/> objects.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.DependencyObjectExtensions.GetDependencyProperties(System.Windows.DependencyObject)">
            <summary>
            Gets all dependency properties of a <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">Source object.</param>
            <returns>An array of all dependency properties for the object.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.DependencyObjectExtensions.GetNonReadOnlyDependencyProperties(System.Windows.DependencyObject)">
            <summary>
            Gets all writeable dependency properties of a <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="obj">Source object.</param>
            <returns>An array of all non-readonly dependency properties for the object.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Extensions.PopupExtensions">
            <summary>
            Extensions for <see cref="T:System.Windows.Controls.Primitives.Popup"/> classes.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.PopupExtensions.CloseOnInnerButtonClicks(System.Windows.Controls.Primitives.Popup,System.Func{System.Boolean},System.Windows.DependencyObject)">
            <summary>
            Makes a popup close after one of its children inner button
            is clicked.
            </summary>
            <param name="popup">The popup to customize.</param>
            <param name="isActiveChecker">An optional method to check if this behavior is allowed to run or not.</param>
            <param name="rootToDiscard">Optional base element for which children will be discarded from this behavior.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Extensions.TextBlockExtensions">
            <summary>
            Extensions for <see cref="T:System.Windows.Controls.TextBlock"/> elements.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.TextBlockExtensions.DecomposeIntoTextElements(System.Windows.Controls.TextBlock)">
            <summary>
            Breaks a <see cref="T:System.Windows.Controls.TextBlock"/> content down into <see cref="T:System.Windows.Documents.TextElement"/> objects.
            </summary>
            <param name="textBlock">Source text block.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Extensions.TextElementExtensions">
            <summary>
            Extensions for <see cref="T:System.Windows.Documents.TextElement"/> derived classes.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.TextElementExtensions.FindAndHighlightTextMatches(System.Windows.Documents.TextElement,System.String,System.Collections.Generic.IDictionary{System.Windows.DependencyProperty,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Finds a specific string in a <see cref="T:System.Windows.Documents.TextElement"/> and highlights it using passed properties.
            </summary>
            <param name="textElement">Base text element.</param>
            <param name="filter">String filter to be passed.</param>
            <param name="highlightPropertiesAndValues">A dictionary holding pair(s) of dependency property/value to be applied on string parts that pass the filter.</param>
            <param name="ignoreCase">If set to true, string comparison with filter ignores casing.</param>
            <param name="splitFilterIntoWords">If set to true, split filter into words and find matches to item content words starting with these filters.</param>
            <returns>True if the text element holds one or several matches, false otherwise.</returns>
            <remarks>Highlighting might create new <see cref="T:System.Windows.Documents.Run"/> items. Use <see cref="M:MaterialDesignThemes.Wpf.AddOns.Extensions.TextElementExtensions.ClearAppliedProperties(System.Windows.Documents.TextElement)"/> to reset the text element to its initial state.</remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.TextElementExtensions.ClearAppliedProperties(System.Windows.Documents.TextElement)">
            <summary>
            Clears properties that were previously applied using the <see cref="T:System.Windows.Documents.TextElement"/>'s ApplyPropertyValue method.
            </summary>
            <param name="textElement">Base text element.</param>
            <remarks>Should be used with the <see cref="M:MaterialDesignThemes.Wpf.AddOns.Extensions.TextElementExtensions.FindAndHighlightTextMatches(System.Windows.Documents.TextElement,System.String,System.Collections.Generic.IDictionary{System.Windows.DependencyProperty,System.Object},System.Boolean,System.Boolean)"/> method to clear any highlights.</remarks>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Extensions.TypeExtensions">
            <summary>
            Performs additional operation on <see cref="T:System.Type"/> objects.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.TypeExtensions.GetDefault(System.Type)">
            <summary>
            Gets default value of a passed type using Reflection.
            </summary>
            <param name="type">The type from which to get default value.</param>
            <returns>The default value matching the type.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.TypeExtensions.GetDefaultGeneric``1">
            <summary>
            Gets default value of a passed generic type.
            </summary>
            <typeparam name="T">The generic type to get default value from.</typeparam>
            <returns>The default value of the generic type.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Extensions.VisualDpiExtensions">
            <summary>
            Offers util methods to get information about a <see cref="T:System.Windows.Media.Visual"/> object length with screen DPI dependency included.
            </summary>
            <remarks>Adapted from https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit to be made public.</remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.VisualDpiExtensions.TransformToDeviceX(System.Windows.Media.Visual,System.Double)">
            <summary>
            Calculates the DPI independent X scaling of a visual by a given quantity. 
            </summary>
            <param name="visual">The visual to be measured.</param>
            <param name="x">The quantity to be applied for X scaling.</param>
            <returns>The result of the transformation.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.VisualDpiExtensions.TransformToDeviceY(System.Windows.Media.Visual,System.Double)">
            <summary>
            Calculates the DPI independent Y scaling of a visual by a given quantity. 
            </summary>
            <param name="visual">The visual to be measured.</param>
            <param name="y">The quantity to be applied for Y scaling.</param>
            <returns>The result of the transformation.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Extensions.VisualScaleTransformExtensions">
            <summary>
            Offers util methods to get information about a <see cref="T:System.Windows.Media.Visual"/> object inner <see cref="T:System.Windows.Media.Transform"/> operations.
            </summary>
            <remarks>Adapted from https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit to be made public.</remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.VisualScaleTransformExtensions.GetTotalTransformScaleX(System.Windows.Media.Visual)">
            <summary>
            Returns the horizontal scale coefficient that is applied over a control after
            being transformed by cascading Scales. 
            </summary>
            <param name="visual">The visual to be measured.</param>
            <returns>The combined horizontal scale coefficient of the transforms.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Extensions.VisualScaleTransformExtensions.GetTotalTransformScaleY(System.Windows.Media.Visual)">
            <summary>
            Returns the vertical scale coefficient that is applied over a control after
            being transformed by cascading Scales. 
            </summary>
            <param name="visual">The visual to be measured.</param>
            <returns>The combined vertical scale coefficient of the transforms.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.FilterBox">
            <summary>
            Base class for selectors with filter.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox._filterCache">
            <summary>
            Current filter value.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.FilterBox"/> type.
            Override some base dependency properties.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs whenever a property change. Preview event, meaning this is the first
            pass through before value processing.
            </summary>
            <param name="e">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.ItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.OnItemsSourceChanged">
            <summary>
            Occurs whenever the item source property changes.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.ApplyFilter(System.Boolean)">
            <summary>
            Applies current filter on items. 
            </summary>
            <param name="force">Forces filtering even if filter value did not change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.OnFilterApplied">
            <summary>
            Called whenever the filter value changes and filtering is processed.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.Filter">
            <summary>
            Gets or sets the string used for filtering.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox.FilterProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.Filter"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.FilterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.Filter"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.IgnoreCase">
            <summary>
            Gets or sets a value indicating if text comparisons during
            filtering should ignore case or not.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox.IgnoreCaseProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.IgnoreCase"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.AlsoMatchWithFirstWordLetters">
            <summary>
            Gets or sets a value indicating if text comparisons during
            filtering can work when matching first letter of item content words.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox.AlsoMatchWithFirstWordLettersProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.AlsoMatchWithFirstWordLetters"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.AlsoMatchFilterWordsAcrossBoundProperties">
            <summary>
            Gets or sets a value indicating if text comparisons during
            filtering can work only on a per member path basis for a given item,
            and or across member paths, thus allowing to select a word into one property
            and another into another property.
            Ex: Bound item is Data { Property1="Some data", Property2="other date"), filter "Some oth" will match
            if this option is true.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox.AlsoMatchFilterWordsAcrossBoundPropertiesProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.AlsoMatchFilterWordsAcrossBoundProperties"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.ConvertValuesToBeFilteredToString">
            <summary>
            Gets or sets a value indicating if non-string property values on the target
            items must be converted to string.
            </summary>
            <remarks><see cref="M:System.Object.ToString"/> method might be called without formatting or culture.</remarks>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox.ConvertValuesToBeFilteredToStringProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.ConvertValuesToBeFilteredToString"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.FilterRulesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.IgnoreCase"/>, <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.AlsoMatchWithFirstWordLetters"/>
            or <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.AlsoMatchFilterWordsAcrossBoundProperties"/> properties change.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.FilterHint">
            <summary>
            Gets or sets the hint to be set on the filter.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox.FilterHintProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.FilterHint"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.NothingToDisplayHint">
            <summary>
            Gets or sets the hint to be set when there is no items to be displayed.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox.NothingToDisplayHintProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.NothingToDisplayHint"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.ItemFilterMemberPaths">
            <summary>
            Gets or sets a value indicating the path to item string properties on
            which filtering must be applied. Use ',' to separate member paths.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox.ItemFilterMemberPathsProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.ItemFilterMemberPaths"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.FilterMemberPathsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.ItemFilterMemberPaths"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.ItemsCount">
            <summary>
            Gets the total number of items available for selection.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox.ItemsCountProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.ItemsCount"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.ItemsCountChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.ItemsCountChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.OnItemsCountChanged">
            <summary>
            Called whenever the item count is updated.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.HasItemsToDisplay">
            <summary>
            Gets a boolean indicating if control has items to display.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox.HasItemsToDisplayProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.HasItemsToDisplay"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.IsLoadingItemsInBackground">
            <summary>
            Gets a boolean indicating if items are being initialized in background.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox.IsLoadingItemsInBackgroundProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.IsLoadingItemsInBackground"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.IsLoadingItemsInBackgroundHint">
            <summary>
            Gets or sets the hint to be shown when items are being loaded in background.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBox.IsLoadingItemsInBackgroundHintProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterBox.IsLoadingItemsInBackgroundHint"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Indicates if the child item is its own container (i.e. a visual object).
            </summary>
            <param name="item">The item to be checked.</param>
            <returns>True is item is its own container.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBox.GetContainerForItemOverride">
            <summary>
            Provides a visual object to a given item.
            </summary>
            <returns>A pre-initialized <see cref="T:MaterialDesignThemes.Wpf.AddOns.FilterBoxItem"/>.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.FilterBoxItem">
            <summary>
            Item for <see cref="T:MaterialDesignThemes.Wpf.AddOns.FilterBox"/> control.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterBoxItem._gridWrapper">
            <summary>
            The grid on which the item visual state is attached to.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBoxItem.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.FilterBoxItem"/>.
            </summary>
            <param name="initialFilter">Initial filter to be applied on the item.</param>
            <param name="highlightPerFilterWord">Indicates if highlight must occur on a per filter word basis or on the whole filter string.</param>
            <param name="ignoreCaseWhenFiltering">If true, ignores casing during filtering.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBoxItem.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.FilterBoxItem"/> type.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBoxItem.OnApplyTemplate">
            <summary>
            Occurs on template application.
            </summary>
            <exception cref="T:System.Exception">Thrown when a template part cannot be found.</exception>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterBoxItem.Initialize(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes the <see cref="T:MaterialDesignThemes.Wpf.AddOns.FilterBoxItem"/>.
            </summary>
            <param name="filter">Initial filter to be applied on the item.</param>
            <param name="highlightPerFilterWord">Indicates if highlight must occur on a per filter word basis or on the whole filter string.</param>
            <param name="ignoreCaseWhenFiltering">If true, ignores casing during filtering.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.FilterTextBox">
            <summary>
            A <see cref="T:System.Windows.Controls.TextBox"/> that can be used to filter items out
            from an associated items control pointed by <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AssociatedItemsControl"/>.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox._filterCache">
            <summary>
            Current filter value.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.FilterTextBox"/> type.
            Override some base dependency properties.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ApplyFilter(System.Boolean)">
            <summary>
            Applies current filter on items. 
            </summary>
            <param name="force">Forces filtering even if filter value did not change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.OnFilterApplied">
            <summary>
            Called whenever the filter value changes and filtering is processed.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.OnItemsSourceChanged">
            <summary>
            Occurs whenever the item source property changes.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs whenever a key from keyboard is pressed.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AssociatedItemsControl">
            <summary>
            Gets or sets the control on which filtering applies.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AssociatedItemsControlProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AssociatedItemsControl"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AssociatedItemsControlPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AssociatedItemsControl"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AssociatedItemsControlIsEmpty">
            <summary>
            Gets a boolean indicating if the associated control has no items to be filtered.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AssociatedItemsControlIsEmptyProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AssociatedItemsControlIsEmpty"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AssociatedItemsControlIsEmptyHint">
            <summary>
            Gets or sets the hint to be shown when they are no items to be filtered.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AssociatedItemsControlIsEmptyHintProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AssociatedItemsControlIsEmptyHint"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IsLoadingItemsInBackground">
            <summary>
            Gets a boolean indicating if items are being initialized in background.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IsLoadingItemsInBackgroundProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IsLoadingItemsInBackground"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IsLoadingItemsInBackgroundHint">
            <summary>
            Gets or sets the hint to be shown when items are being loaded in background.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IsLoadingItemsInBackgroundHintProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IsLoadingItemsInBackgroundHint"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ItemFilterMemberPaths">
            <summary>
            Gets or sets a value indicating the path to item string properties on
            which filtering must be applied. Use ',' to separate member paths.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ItemFilterMemberPathsProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ItemFilterMemberPaths"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.FilterMemberPathsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ItemFilterMemberPaths"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.Filter">
            <summary>
            Gets or sets the string used for filtering.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.FilterProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.Filter"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.FilterHint">
            <summary>
            Gets or sets the hint to be set on the filter.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.FilterHintProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.FilterHint"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IgnoreCase">
            <summary>
            Gets or sets a value indicating if text comparisons during
            filtering should ignore case or not.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IgnoreCaseProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IgnoreCase"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AlsoMatchWithFirstWordLetters">
            <summary>
            Gets or sets a value indicating if text comparisons during
            filtering can work when matching first letter of item content words.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AlsoMatchWithFirstWordLettersProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AlsoMatchWithFirstWordLetters"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AlsoMatchFilterWordsAcrossBoundProperties">
            <summary>
            Gets or sets a value indicating if text comparisons during
            filtering can work only on a per member path basis for a given item,
            and or across member paths, thus allowing to select a word into one property
            and another into another property.
            Ex: Bound item is Data { Property1="Some data", Property2="other date"), filter "Some oth" will match
            if this option is true.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AlsoMatchFilterWordsAcrossBoundPropertiesProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AlsoMatchFilterWordsAcrossBoundProperties"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ConvertValuesToBeFilteredToString">
            <summary>
            Gets or sets a value indicating if non-string property values on the target
            items must be converted to string.
            </summary>
            <remarks><see cref="M:System.Object.ToString"/> method might be called without formatting or culture.</remarks>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ConvertValuesToBeFilteredToStringProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ConvertValuesToBeFilteredToString"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.FilterRulesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.Filter"/>, <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IgnoreCase"/>, <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AlsoMatchWithFirstWordLetters"/>
            or <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.AlsoMatchFilterWordsAcrossBoundProperties"/> properties change.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ItemsCount">
            <summary>
            Gets the total number of items available for selection.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ItemsCountProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ItemsCount"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ItemsCountChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="M:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ItemsCountChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.HasItemsToDisplay">
            <summary>
            Gets a boolean indicating if control has items to display.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.HasItemsToDisplayProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.HasItemsToDisplay"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.NothingToDisplayHint">
            <summary>
            Gets or sets the hint to be set when there is no items to be displayed.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.NothingToDisplayHintProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.NothingToDisplayHint"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ItemsCountSummary">
            <summary>
            Gets a string displaying the summary of currently filtered items vs. total items.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ItemsCountSummaryProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.ItemsCountSummary"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconKind">
            <summary>
            Gets or sets the kind of the icon.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconKindProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconKind"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconForeground">
            <summary>
            Gets or sets the foreground for toggle icon.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconForegroundProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconForeground"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IsFilterActive">
            <summary>
            Gets or sets the kind of the icon when the control is open.
            </summary>
            <summary>
            Gets a boolean indicating if filtering is currently active.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IsFilterActiveProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IsFilterActive"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconKindWhenFilterIsActive">
            <summary>
            Gets or sets the kind of the icon to display when the filter is active.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconKindWhenFilterIsActiveProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconKindWhenFilterIsActive"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconKindWhenNoItemAfterFiltering">
            <summary>
            Gets or sets the kind of the icon to display when the filter is active but all items are filtered out.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconKindWhenNoItemAfterFilteringProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconKindWhenNoItemAfterFiltering"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconKindWhenOpen">
            <summary>
            Gets or sets the kind of the icon when the associated control is open (used for results in popup).
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconKindWhenOpenProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.FilterTextBox.IconKindWhenOpen"/> as a dependency property.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended">
            <summary>
            Extends <see cref="T:MaterialDesignThemes.Wpf.ButtonAssist"/> by adding new features.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended.UniformCornerRadiusProperty">
            <summary>
            Sets the corner radius of a button or border base element with a scalar (double) value, which helps to 
            define animations when the corner radius is uniformly changed.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended.GetUniformCornerRadius(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended.UniformCornerRadiusProperty"/> attached property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <returns>Returns the value of the corner radius.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended.SetUniformCornerRadius(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended.UniformCornerRadiusProperty"/> attached property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <param name="value">The new value to be set.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended.OnUniformCornerRadius(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended.UniformCornerRadiusProperty"/> attached property is set.
            </summary>
            <param name="d">The dependency object on which the property is attached to.</param>
            <param name="e">Property change information.</param>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended.AttachedPackIconKindProperty">
            <summary>
            Sets a <see cref="T:MaterialDesignThemes.Wpf.PackIcon"/> kind property to a button.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended.GetAttachedPackIconKind(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended.AttachedPackIconKindProperty"/> attached property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <returns>Returns the attached icon.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended.SetAttachedPackIconKind(System.Windows.DependencyObject,MaterialDesignThemes.Wpf.PackIconKind)">
            <summary>
            Sets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.ButtonAssistExtended.AttachedPackIconKindProperty"/> attached property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <param name="value">The new value to be set.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelectorExtension">
            <summary>
            A <see cref="T:System.Windows.Markup.MarkupExtension"/> to define a <see cref="T:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelector"/>
            in XAML code.
            </summary>
            <remarks>From: https://stackoverflow.com/questions/4672867/can-i-use-a-different-template-for-the-selected-item-in-a-wpf-combobox-than-for</remarks>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelectorExtension.SelectedItemTemplate">
            <summary>
            Gets or sets the item template to be used for the selected item.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelectorExtension.SelectedItemTemplateSelector">
            <summary>
            Gets or sets the item template selector to be used for template selector of the selected item.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelectorExtension.DropdownItemsTemplate">
            <summary>   
            Gets or sets the item template to be used for the items displayed in the dropdown menu of the combobox.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelectorExtension.DropdownItemsTemplateSelector">
            <summary>
            Gets or sets the item template selector to be used for template selection of
            the items displayed in the dropdown menu of the combobox.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelectorExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Provides a preset <see cref="T:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelector"/>.
            </summary>
            <param name="serviceProvider">Unused.</param>
            <returns>A new <see cref="T:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelector"/>.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelector">
            <summary>
            A <see cref="T:System.Windows.Controls.DataTemplateSelector"/> that discriminates selected
            item from item in dropdown menu for ComboBoxes.
            </summary>
            <remarks>From: https://stackoverflow.com/questions/4672867/can-i-use-a-different-template-for-the-selected-item-in-a-wpf-combobox-than-for</remarks>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelector.SelectedItemTemplate">
            <summary>
            Gets or sets the item template to be used for the selected item.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelector.SelectedItemTemplateSelector">
            <summary>
            Gets or sets the item template selector to be used for template selector of the selected item.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelector.DropdownItemsTemplate">
            <summary>
            Gets or sets the item template to be used for the items displayed in the dropdown menu of the combobox.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelector.DropdownItemsTemplateSelector">
            <summary>
            Gets or sets the item template selector to be used for template selection of
            the items displayed in the dropdown menu of the combobox.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.ComboBoxTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Selects the template that best matches the passed item.
            </summary>
            <param name="item">A selected or 'displayed in dropdown' item.</param>
            <param name="container">The item's container (will travel to find any <see cref="T:System.Windows.Controls.ComboBox"/> 
            or <see cref="T:System.Windows.Controls.ComboBoxItem"/> parent from this reference).</param>
            <returns></returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper">
            <summary>
            Implements helpers for items controlled by <see cref="T:MaterialDesignThemes.Wpf.AddOns.FilterTextBox"/> objects.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.TextFilterProperty">
            <summary>
            A filter that allows the identification of words to be highlighted in attached control text elements.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.GetTextFilter(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.TextFilterProperty"/> dependency property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <returns>Returns the text filter that is applied to the element.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.SetTextFilter(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.TextFilterProperty"/> dependency property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <param name="value">The new text filter value to be set.</param>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.HighlightPerWordProperty">
            <summary>
            To be set to true to activate highlighting for each word of <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.TextFilterProperty"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.GetHighlightPerWord(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.HighlightPerWordProperty"/> dependency property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <returns>Returns a value indicating if <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.TextFilterProperty"/> words should be used independently.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.SetHighlightPerWord(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.HighlightPerWordProperty"/> dependency property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <param name="value">The new value for the property.</param>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.IgnoreCaseProperty">
            <summary>
            To be set to true to ignore casing when applying the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.TextFilterProperty"/> filter.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.GetIgnoreCase(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.IgnoreCaseProperty"/> dependency property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <returns>Returns the text filter that is applied to the element.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.SetIgnoreCase(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.IgnoreCaseProperty"/> dependency property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <param name="value">The new text filter value to be set.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.OnFilterPropertyChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the related attached property changes.
            </summary>
            <param name="sender">The object whose subscribed to the attached property.</param>
            <param name="args">Information about property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.FilterTextBoxHelper.TargetElement_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called whenever the related target object is loaded. 
            </summary>
            <param name="sender">The object that loaded.</param>
            <param name="e">Information about property change.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Helpers.ScrollViewerAssistExtended">
            <summary>
            Implements helpers for <see cref="T:System.Windows.Controls.ScrollViewer"/> controls.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Helpers.ScrollViewerAssistExtended.ScrollsToEndProperty">
            <summary>
            To be set to true to activate this helper.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.ScrollViewerAssistExtended.GetScrollsToEnd(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.ScrollViewerAssistExtended.ScrollsToEndProperty"/> dependency property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <returns>Returns true if ScrollViewer must scroll to end automatically, false otherwise.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.ScrollViewerAssistExtended.SetScrollsToEnd(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.ScrollViewerAssistExtended.ScrollsToEndProperty"/> dependency property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <param name="value">The new value to be set.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.ScrollViewerAssistExtended.OnScrollsToEndChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the related attached property changes.
            </summary>
            <param name="sender">The object whose subscribed to the attached property.</param>
            <param name="args">Information about property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.ScrollViewerAssistExtended.ScrollViewer_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called whenever the related ScrollViewer is loaded. 
            Allows to recall the <see cref="M:MaterialDesignThemes.Wpf.AddOns.Helpers.ScrollViewerAssistExtended.OnScrollsToEndChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)"/> method in a more proper context.
            </summary>
            <param name="sender">The ScrollViewer that loaded.</param>
            <param name="e">Information about property change.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Helpers.TextBoxAssistExtended">
            <summary>
            Stores helpers <see cref="T:System.Windows.Controls.TextBox"/> elements.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Helpers.TextBoxAssistExtended.OverrideBorderPaddingProperty">
            <summary>
            Registers an attached property to allow overriding of the inner TextBox border, which is 
            not accessible in the current definition of the TextBox style.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.TextBoxAssistExtended.GetOverrideBorderPadding(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.TextBoxAssistExtended.OverrideBorderPaddingProperty"/> dependency property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <returns>Returns the border padding.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.TextBoxAssistExtended.SetOverrideBorderPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
            <summary>
            Sets the value of the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.TextBoxAssistExtended.OverrideBorderPaddingProperty"/> dependency property.
            </summary>
            <param name="obj">The object that the dependency property is attached to.</param>
            <param name="value">The new value to be set.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.TextBoxAssistExtended.OnOverrideBorderPadding(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="F:MaterialDesignThemes.Wpf.AddOns.Helpers.TextBoxAssistExtended.OverrideBorderPaddingProperty"/> attached property is set.
            </summary>
            <param name="d">The dependency object on which the property is attached to.</param>
            <param name="e">Property change information.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.TextBoxAssistExtended.TextBox_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called whenever the TextBox is loaded.
            </summary>
            <param name="sender">The element that loaded.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.TextBoxAssistExtended.TextBox_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Called whenever the TextBox size changed.
            </summary>
            <param name="sender">The element for which size changed.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Helpers.TextBoxAssistExtended.OverrideTemplateBorderPadding(System.Windows.Controls.Control)">
            <summary>
            Effectively overrides the TextBox border padding value.
            </summary>
            <param name="textBox">The TextBox that must see its inner border overriden.</param>
            <returns>True if was able to override the padding property of the inner border.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.InformationMessage">
            <summary>
            This control are messages to be included in a <see cref="T:MaterialDesignThemes.Wpf.AddOns.Banner"/>.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.InformationMessage._secondaryActionButtonPartName">
            <summary>
            Name to be used for the secondary action button in <see cref="T:MaterialDesignThemes.Wpf.AddOns.InformationMessage"/> control templates.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessage.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.InformationMessage"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessage.OnApplyTemplate">
            <summary>
            Called at template loading. 
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessage.ButtonBaseOnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs whenever the primary button is clicked.
            </summary>
            <param name="sender">The secondary button.</param>
            <param name="args">Event information.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryButtonBaseOnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs whenever the secondary button is clicked.
            </summary>
            <param name="sender">The secondary button.</param>
            <param name="args">Event information.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.IllustrationContent">
            <summary>
            Gets or sets the illustration icon.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.InformationMessage.IllustrationContentProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.IllustrationContent"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.IllustrationContentTemplate">
            <summary>
            Gets or sets the template for illustration.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.InformationMessage.IllustrationContentTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.IllustrationContentTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.IllustrationContentTemplateSelector">
            <summary>
            Gets or sets the template for illustration.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.InformationMessage.IllustrationContentTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.IllustrationContentTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionCommand">
            <summary>
            Gets or sets the command associated to the secondary button.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionCommandProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionCommand"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionCommandParameter">
            <summary>
            Gets or sets the command parameter associated to the secondary button.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionCommandParameterProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionCommandParameter"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionContent">
            <summary>
            Gets or sets the content of the secondary action button.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionContentProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionContent"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionContentTemplate">
            <summary>
            Gets or sets the content template of the secondary action button.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionContentTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionCommandParameter"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionContentStringFormat">
            <summary>
            Gets or sets the content string format of the secondary action button.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionContentStringFormatProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionContentStringFormat"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionContentTemplateSelector">
            <summary>
            Gets or sets a template selector for the secondary action button.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionContentTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionContentTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="E:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionClick">
            <summary>
            Adds or removes secondary action button click event handlers.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionClickEvent">
            <summary>
            Registers <see cref="E:MaterialDesignThemes.Wpf.AddOns.InformationMessage.SecondaryActionClick"/> as a routed event.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue">
            <summary>
            Represents a message to be asynchronously displayed.
            </summary>
            <remarks>
            Code here is reproduced and adapted from the <see cref="T:MaterialDesignThemes.Wpf.SnackbarMessageQueue"/> source in MaterialDesignInXamlToolkit
            under the MIT license - Copyright (c) James Willock, Mulholland Software and Contributors the MaterialDesignInXaml 
            </remarks>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue._messageDuration">
            <summary>
            Stores message duration internally.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.#ctor">
            <summary>
            Initiates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.#ctor(System.TimeSpan)">
            <summary>
            Initiates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue"/>.
            </summary>
            <param name="messageDuration">Custom message duration.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.IgnoreDuplicate">
            <summary>
            Gets or sets a value that indicates whether this message queue displays messages without discarding duplicates. 
            True to show every message even if there are duplicates.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Dispatcher">
            <summary>
            Gets the dispatcher used by the message queue.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue(System.Object)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue(System.Object,System.Boolean)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="neverConsiderToBeDuplicate">Never skip, even if duplicate exists in queue.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue(System.Object,System.Object,System.Action)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue(System.Object,System.Object,System.Action,System.Object,System.Action)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="secondActionContent">Content of the second action button.</param>
            <param name="secondActionHandler">Callback of the second action button.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue(System.Object,System.Object,System.Action,System.Boolean)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue(System.Object,System.Object,System.Action,System.Object,System.Action,System.Boolean)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="secondActionContent">Content of the second action button.</param>
            <param name="secondActionHandler">Callback of the second action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue``1(System.Object,System.Object,System.Action{``0},``0)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <typeparam name="TArgument">Type of the object passed as argument to the action button callback.</typeparam>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue``2(System.Object,System.Object,System.Action{``0},``0,System.Object,System.Action{``1},``1)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="secondActionContent">Content of the second action button.</param>
            <param name="secondActionHandler">Callback of the second action button.</param>
            <param name="secondActionArgument">Argument to be passed to the callback of the second action button.</param>
            <typeparam name="TArgument">Type of the object passed as argument to the action button callback.</typeparam>
            <typeparam name="TArgument2">Type of the object passed as argument to the second action button callback.</typeparam>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue``1(System.Object,System.Object,System.Action{``0},``0,System.Boolean)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
            <typeparam name="TArgument">Type of the object passed as argument to the action button callback.</typeparam>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue``2(System.Object,System.Object,System.Action{``0},``0,System.Object,System.Action{``1},``1,System.Boolean)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="secondActionContent">Content of the second action button.</param>
            <param name="secondActionHandler">Callback of the second action button.</param>
            <param name="secondActionArgument">Argument to be passed to the callback of the second action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
            <typeparam name="TArgument">Type of the object passed as argument to the action button callback.</typeparam>
            <typeparam name="TArgument2">Type of the object passed as argument to the second action button callback.</typeparam>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue``1(System.Object,System.Object,System.Action{``0},``0,System.Boolean,System.Boolean,System.Nullable{System.TimeSpan})">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
            <param name="neverConsiderToBeDuplicate">Never skip, even if duplicate exists in queue.</param>
            <param name="durationOverride">Custom persistence time.</param>
            <typeparam name="TArgument">Type of the object passed as argument to the action button callback.</typeparam>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue``2(System.Object,System.Object,System.Action{``0},``0,System.Object,System.Action{``1},``1,System.Boolean,System.Boolean,System.Nullable{System.TimeSpan})">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="secondActionContent">Content of the second action button.</param>
            <param name="secondActionHandler">Callback of the second action button.</param>
            <param name="secondActionArgument">Argument to be passed to the callback of the second action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
            <param name="neverConsiderToBeDuplicate">Never skip, even if duplicate exists in queue.</param>
            <param name="durationOverride">Custom persistence time.</param>
            <typeparam name="TArgument">Type of the object passed as argument to the action button callback.</typeparam>
            <typeparam name="TArgument2">Type of the object passed as argument to the second action button callback.</typeparam>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue(System.Object,System.Object,System.Action{System.Object},System.Object,System.Boolean,System.Boolean,System.Nullable{System.TimeSpan})">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
            <param name="neverConsiderToBeDuplicate">Never skip, even if duplicate exists in queue.</param>
            <param name="durationOverride">Custom persistence time.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Enqueue(System.Object,System.Object,System.Action{System.Object},System.Object,System.Object,System.Action{System.Object},System.Object,System.Boolean,System.Boolean,System.Nullable{System.TimeSpan})">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="secondActionContent">Content of the second action button.</param>
            <param name="secondActionHandler">Callback of the second action button.</param>
            <param name="secondActionArgument">Argument to be passed to the callback of the second action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
            <param name="neverConsiderToBeDuplicate">Never skip, even if duplicate exists in queue.</param>
            <param name="durationOverride">Custom persistence time.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.InsertItem(System.Object)">
            <summary>
            Performs message insertion into the queue.
            </summary>
            <param name="item">The message to be inserted.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.GenerateMessage(MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem)">
            <summary>
            Creates a message based on a passed <see cref="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem"/>.
            </summary>
            <param name="messageQueueItem">The seed information message item.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue.Dispose">
            <summary>
            Disposes the current message queue.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueExtension">
            <summary>
            Provides shorthand to initialise a new <see cref="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Provides a new <see cref="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue"/>.
            </summary>
            <param name="serviceProvider">Unused.</param>
            <returns>A new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue"/>.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem">
            <summary>
            Concrete <see cref="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue"/> information holder.
            </summary>
            <remarks>
            Code here is reproduced and adapted from the <see cref="T:MaterialDesignThemes.Wpf.SnackbarMessageQueueItem"/> source in MaterialDesignInXamlToolkit
            under the MIT license - Copyright (c) James Willock,  Mulholland Software and Contributors the MaterialDesignInXaml 
            </remarks>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.Content">
            <summary>
            The content to be displayed
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.Duration">
            <summary>
            Message show duration.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.ActionContent">
            <summary>
            The content for the action button on the snackbar
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.ActionHandler">
            <summary>
            Handler to be invoked when the action button is clicked
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.ActionArgument">
            <summary>
            The argument to pass to the <see cref="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.ActionHandler"/> delegate.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.SecondActionContent">
            <summary>
            The content for the second action button on the snackbar
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.SecondActionHandler">
            <summary>
            Handler to be invoked when the second action button is clicked
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.SecondActionArgument">
            <summary>
            The argument to pass to the <see cref="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.SecondActionHandler"/> delegate.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.IsPromoted">
            <summary>
            Promote the message, pushing it in front of any message that is not promoted.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.IgnoreDuplicate">
            <summary>
            Still display this message even if it is a duplicate.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem.IsDuplicate(MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem)">
            <summary>
            Checks if given item is a duplicate to this
            </summary>
            <param name="item">Item to check for duplicate</param>
            <returns><c>true</c> if given item is a duplicate to this, <c>false</c> otherwise</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Notification">
            <summary>
            This control are messages to be included in a <see cref="T:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar"/>.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Notification.MessageType">
            <summary>
            Enumerates the different message types for the notification.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Notification.MessageType.Undefined">
            <summary>
            No type.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Notification.MessageType.Information">
            <summary>
            Simple information to be reported.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Notification.MessageType.Warning">
            <summary>
            Message contains a warning.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Notification.MessageType.Alert">
            <summary>
            Message contains an alert or error.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Notification.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.Notification"/>.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Notification.NotificationType">
            <summary>
            Gets or sets the command associated to the secondary button.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Notification.NotificationTypeProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.Notification.NotificationType"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Notification.NotificationTypeChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.Notification.NotificationType"/> property changes.
            </summary>
            <param name="sender">Object that triggered the event.</param>
            <param name="args">Event info.</param>
        </member>
        <member name="E:MaterialDesignThemes.Wpf.AddOns.Notification.NotificationTypeChanged">
            <summary>
            Adds or removes the notification type changed event handler.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Notification.NotificationTypeChangedEvent">
            <summary>
            Registers <see cref="E:MaterialDesignThemes.Wpf.AddOns.Notification.NotificationTypeChanged"/> as a routed event.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.NotificationQueue">
            <summary>
            Represents a message to be asynchronously displayed.
            </summary>
            <remarks>
            Code here is reproduced and adapted from the <see cref="T:MaterialDesignThemes.Wpf.SnackbarMessageQueue"/> source in MaterialDesignInXamlToolkit
            under the MIT license - Copyright (c) James Willock, Mulholland Software and Contributors the MaterialDesignInXaml 
            </remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.#ctor">
            <summary>
            Initiates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.NotificationQueue"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.#ctor(System.TimeSpan)">
            <summary>
            Initiates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.NotificationQueue"/>.
            </summary>
            <param name="messageDuration">Custom message duration.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Boolean)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="neverConsiderToBeDuplicate">Never skip, even if duplicate exists in queue.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Object,System.Action)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Object,System.Action,System.Object,System.Action)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="secondActionContent">Content of the second action button.</param>
            <param name="secondActionHandler">Callback of the second action button.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Object,System.Action,System.Boolean)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Object,System.Action,System.Object,System.Action,System.Boolean)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="secondActionContent">Content of the second action button.</param>
            <param name="secondActionHandler">Callback of the second action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue``1(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Object,System.Action{``0},``0)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <typeparam name="TArgument">Type of the object passed as argument to the action button callback.</typeparam>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue``2(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Object,System.Action{``0},``0,System.Object,System.Action{``1},``1)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="secondActionContent">Content of the second action button.</param>
            <param name="secondActionHandler">Callback of the second action button.</param>
            <param name="secondActionArgument">Argument to be passed to the callback of the second action button.</param>
            <typeparam name="TArgument">Type of the object passed as argument to the action button callback.</typeparam>
            <typeparam name="TArgument2">Type of the object passed as argument to the second action button callback.</typeparam>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue``1(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Object,System.Action{``0},``0,System.Boolean)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
            <typeparam name="TArgument">Type of the object passed as argument to the action button callback.</typeparam>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue``2(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Object,System.Action{``0},``0,System.Object,System.Action{``1},``1,System.Boolean)">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="secondActionContent">Content of the second action button.</param>
            <param name="secondActionHandler">Callback of the second action button.</param>
            <param name="secondActionArgument">Argument to be passed to the callback of the second action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
            <typeparam name="TArgument">Type of the object passed as argument to the action button callback.</typeparam>
            <typeparam name="TArgument2">Type of the object passed as argument to the second action button callback.</typeparam>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue``1(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Object,System.Action{``0},``0,System.Boolean,System.Boolean,System.Nullable{System.TimeSpan})">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
            <param name="neverConsiderToBeDuplicate">Never skip, even if duplicate exists in queue.</param>
            <param name="durationOverride">Custom persistence time.</param>
            <typeparam name="TArgument">Type of the object passed as argument to the action button callback.</typeparam>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue``2(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Object,System.Action{``0},``0,System.Object,System.Action{``1},``1,System.Boolean,System.Boolean,System.Nullable{System.TimeSpan})">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="secondActionContent">Content of the second action button.</param>
            <param name="secondActionHandler">Callback of the second action button.</param>
            <param name="secondActionArgument">Argument to be passed to the callback of the second action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
            <param name="neverConsiderToBeDuplicate">Never skip, even if duplicate exists in queue.</param>
            <param name="durationOverride">Custom persistence time.</param>
            <typeparam name="TArgument">Type of the object passed as argument to the action button callback.</typeparam>
            <typeparam name="TArgument2">Type of the object passed as argument to the second action button callback.</typeparam>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Object,System.Action{System.Object},System.Object,System.Boolean,System.Boolean,System.Nullable{System.TimeSpan})">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
            <param name="neverConsiderToBeDuplicate">Never skip, even if duplicate exists in queue.</param>
            <param name="durationOverride">Custom persistence time.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.Enqueue(System.Object,MaterialDesignThemes.Wpf.AddOns.Notification.MessageType,System.Object,System.Action{System.Object},System.Object,System.Object,System.Action{System.Object},System.Object,System.Boolean,System.Boolean,System.Nullable{System.TimeSpan})">
            <summary>
            Enqueues a message in the display list.
            </summary>
            <param name="content">Message to display.</param>
            <param name="type">Type of information to show.</param>
            <param name="actionContent">Content of the action button.</param>
            <param name="actionHandler">Callback of the action button.</param>
            <param name="actionArgument">Argument to be passed to the callback of the action button.</param>
            <param name="secondActionContent">Content of the second action button.</param>
            <param name="secondActionHandler">Callback of the second action button.</param>
            <param name="secondActionArgument">Argument to be passed to the callback of the second action button.</param>
            <param name="promote">Set to true if message should be prioritized.</param>
            <param name="neverConsiderToBeDuplicate">Never skip, even if duplicate exists in queue.</param>
            <param name="durationOverride">Custom persistence time.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueue.GenerateMessage(MaterialDesignThemes.Wpf.AddOns.InformationMessageQueueItem)">
            <summary>
            Creates a message based on a passed <see cref="T:MaterialDesignThemes.Wpf.AddOns.NotificationQueueItem"/>.
            </summary>
            <param name="messageQueueItem">The seed information message item.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.NotificationQueueExtension">
            <summary>
            Provides shorthand to initialise a new <see cref="T:MaterialDesignThemes.Wpf.AddOns.NotificationQueue"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.NotificationQueueExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Provides a new <see cref="T:MaterialDesignThemes.Wpf.AddOns.NotificationQueue"/>.
            </summary>
            <param name="serviceProvider">Unused.</param>
            <returns>A new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.NotificationQueue"/>.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.NotificationQueueItem">
            <summary>
            A <see cref="T:MaterialDesignThemes.Wpf.AddOns.InformationMessageQueue"/> that holds a <see cref="T:MaterialDesignThemes.Wpf.AddOns.Notification.MessageType"/> property type.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.NotificationQueueItem.NotificationType">
            <summary>
            Gets or sets the type of the notification message.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid">
            <summary>
            This control extends conventional DataGrid so it displays features
            that helps it match the material design specifications.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.UsesPagingInternal">
            <summary>
            Determines if paging system should be used instead of raw source.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.#ctor">
            <summary>
            Creates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PagedDataGrid_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the control is loaded and bindings are resolved.
            </summary>
            <param name="sender">Unused.</param>
            <param name="e">unused.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid"/> type.
            Override some base dependency properties.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PagedTable_TableInformationUpdated(System.Object,System.EventArgs)">
            <summary>
            Occurs whenever table information changes.
            Allows to internally update every related properties.
            </summary>
            <param name="sender">Unused.</param>
            <param name="e">Unused.</param>
            <remarks>Core method, syncs with page manager.</remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PagedTable_CurrentPageChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs whenever paged table page changes.
            Allows to internally update every related properties.
            </summary>
            <param name="sender">Unused.</param>
            <param name="e">Unused.</param>
            <remarks>Core method, syncs with page manager.</remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PagedTable_CheckMarkedRowsChanged(System.Object,System.EventArgs)">
            <summary>
            Called whenever the checkmark selection list changes.
            </summary>
            <param name="sender">Unused.</param>
            <param name="e">Unused.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.OnAutoGeneratingColumn(System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)">
            <summary>
            Called at DataGrid column generation.
            </summary>
            <param name="e">Event info.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.OnAutoGeneratedColumns(System.EventArgs)">
            <summary>
            Occurs whenever columns auto-generation is over.
            </summary>
            <param name="e">Event information.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.EvaluateUserDefinedColumnOffset">
            <summary>
            Evaluates where the user defined columns should be positioned 
            regarding to checkmark and ID columns existence and positioning.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.Columns_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs whenever the column collection changes.
            </summary>
            <param name="sender">The collection that changed.</param>
            <param name="e">Collection changed event information.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanUserAddRowsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:System.Windows.Controls.DataGrid.CanUserAddRows"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ProcessCanUserAddRowsForNewSource(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Determines the <see cref="P:System.Windows.Controls.DataGrid.CanUserAddRows"/> property depending
            on the source type (if writeable or not).
            </summary>
            <param name="newSource">A reference to the newly set source.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ProcessCanUserAddRows">
            <summary>
            Determines the <see cref="P:System.Windows.Controls.DataGrid.CanUserAddRows"/> property depending
            on various internal factor related to paging and source typ.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.GoToNextPageCommand">
            <summary>
            Gets the command to reach next page.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.GoToPreviousPageCommand">
            <summary>
            Gets the command to reach previous page.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.GoToFirstPageCommand">
            <summary>
            Gets the command to reach first page.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.GoToLastPageCommand">
            <summary>
            Gets the command to reach last page.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IntermediatePropertyValueType">
            <summary>
            Gets or sets the corner radius to be applied to the control.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IntermediatePropertyValueTypeProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IntermediatePropertyValueType"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IntermediatePropertyValueTypeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IntermediatePropertyValueType"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CornerRadius">
            <summary>
            Gets or sets the corner radius to be applied to the control.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CornerRadiusProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CornerRadius"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsHeaders">
            <summary>
            Gets or sets a value indicating if column headers must be shown.
            </summary>
            <remarks>Will partly (on column header visibility) override the <see cref="P:System.Windows.Controls.DataGrid.HeadersVisibility"/> property.</remarks>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsHeadersProperty">
            <summary>
            Registers <see cref="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsHeadersProperty"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsHeadersChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsHeaders"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.UsesPaging">
            <summary>
            Gets or sets a value indicating if paging is activated.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.UsesPagingProperty">
            <summary>
            Registers <see cref="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.UsesPagingProperty"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.UsesPagingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.UsesPaging"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PagingOptionsVisibility">
            <summary>
            Gets the visibility of the paging options.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PagingOptionsVisibilityProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PagingOptionsVisibility"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PagingOptionsTemplate">
            <summary>
            Gets or sets the template to be used for paging options control, including navigation arrows.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PagingOptionsTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PagingOptionsTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsGoToFirstAndLastPageControls">
            <summary>
            Gets or sets a value indicating if controls allowing to go to first or last page should be shown.
            </summary>
            <remarks>No special behavior on this property, just an helper for templating.</remarks>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsGoToFirstAndLastPageControlsProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsGoToFirstAndLastPageControls"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.BackgroundLoadingThreshold">
            <summary>
            Gets or sets from how many rows found in the source background loading must be used.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.BackgroundLoadingThresholdProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.BackgroundLoadingThreshold"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.BackgroundLoadingThresholdChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.BackgroundLoadingThreshold"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.BackgroundLoadSize">
            <summary>
            Gets or sets how many rows should be loaded per background thread turn.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.BackgroundLoadSizeProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.BackgroundLoadSize"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.BackgroundLoadSizeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.BackgroundLoadSize"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ForceBackgroundLoading">
            <summary>
            Gets or sets a value that indicates if background loading shall be used even when 
            not using paging, selection or ID features.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ForceBackgroundLoadingProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ForceBackgroundLoading"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ForceBackgroundLoadingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ForceBackgroundLoading"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsPageLoading">
            <summary>
            Gets a value indicating if page is loading in the background.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsPageLoadingProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsPageLoading"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PageLoadingText">
            <summary>
            Gets or sets the text to be displayed when items are loading in the background.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PageLoadingTextProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PageLoadingText"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanChangeRowsPerPage">
            <summary>
            Gets or sets a value indicating if the rows per page property can be edited.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanChangeRowsPerPageProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanChangeRowsPerPage"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanChangeRowsPerPageChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanChangeRowsPerPage"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.RowsPerPageSelectionVisibility">
            <summary>
            Gets the rows per page selection option visibility.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.RowsPerPageSelectionVisibilityProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.RowsPerPageSelectionVisibility"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.RowsPerPageSelectionTemplate">
            <summary>
            Gets or sets the template to be used for rows per page selection.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.RowsPerPageSelectionTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.RowsPerPageSelectionTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.RowsPerPage">
            <summary>
            Gets or sets a value indicating how many rows shall are displayed per page.
            Set to 0 or negative value and paging won't be functional.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.RowsPerPageProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.RowsPerPage"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.RowsPerPageChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.RowsPerPage"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CurrentPageIndex">
            <summary>
            Gets the current page number of a paged DataGrid.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CurrentPageIndexProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CurrentPageIndex"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CurrentVisibleItemRangeText">
            <summary>
            Gets the row selection option visibility.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CurrentVisibleItemRangeTextProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CurrentVisibleItemRangeText"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PageCountsSeparatorText">
            <summary>
            Gets the text to be displayed between current page count and total page count.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PageCountsSeparatorTextProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PageCountsSeparatorText"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PageCountsSeparatorTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.PageCountsSeparatorText"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.UpdateCurrentVisibleItemRangeText">
            <summary>
            Updates the current page item count text.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.SortedColumnIndex">
            <summary>
            Gets or sets the index of the column that is or to be sorted.
            </summary>
            <remarks>Set a negative value to disable sorting on the DataGrid.</remarks>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.SortedColumnIndexProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.SortedColumnIndex"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.SortedColumnIndexChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.SortedColumnIndex"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.UnsetSortingOnPreviousSortedColumn">
            <summary>
            Checks if sorting column changed and disables
            sorting on previous sorted one.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsSortingDescending">
            <summary>
            Gets or sets a value indicating is sorting is set 
            on descending order on the sorted column.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsSortingDescendingProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsSortingDescending"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsSortingDescendingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsSortingDescending"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsSortingPersistent">
            <summary>
            Gets or sets a value indicating is sorting should be reapplied
            everytime the source size updates or a value changed in the currently
            sorted column (if any).
            </summary>
            <remarks>Seems equivalent to IsLiveSorting on certain collections.</remarks>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsSortingPersistentProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsSortingPersistent"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsSortingPersistentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IsSortingPersistent"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CommonSortedMemberPath">
            <summary>
            Gets or sets a path to a property to use on source item for sorting.
            Common to all columns, meaning source objects must display this property (or give access to),
            but this is not mandatory, as if not displayable on source object, its self value will be used. 
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CommonSortedMemberPathProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CommonSortedMemberPath"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CommonSortedMemberPathChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CommonSortedMemberPath"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanShowAdditionalOptions">
            <summary>
            Gets or sets a value indicating if more options can be used for the control.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanShowAdditionalOptionsProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanShowAdditionalOptions"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanShowAdditionalOptionsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanShowAdditionalOptions"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.AdditionalOptionsVisibility">
            <summary>
            Gets the visibility of the additional options.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.AdditionalOptionsVisibilityProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.AdditionalOptionsVisibility"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.AdditionalOptionsTemplate">
            <summary>
            Gets or sets the template to be used for additional options.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.AdditionalOptionsTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.AdditionalOptionsTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanUserReorderIDsAndCheckMarksColumns">
            <summary>
            Gets or sets a value indicating if user can reorder index and selector.
            </summary>
            <remarks>No effect while CanUserReorderColumns is false.</remarks>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanUserReorderIDsAndCheckMarksColumnsProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanUserReorderIDsAndCheckMarksColumns"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanUserReorderIDsAndCheckMarksColumnsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CanUserReorderIDsAndCheckMarksColumns"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkedItems">
            <summary>
            Gets source items that are check marked with selector column.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkedItemsProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkedItems"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkedItemsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkedItems"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.SelectAllRowsState">
            <summary>
            Gets or sets a value indicating the selection state of rows.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.SelectAllRowsStateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsCheckMarks"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.SelectAllRowsStateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.SelectAllRowsState"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.SelectAllRowsIsTriStated">
            <summary>
            Gets the list of indexes currently displayed on the grid.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.SelectAllRowsIsTriStatedProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.SelectAllRowsIsTriStated"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsCheckMarks">
            <summary>
            Gets or sets a value indicating if the row selection column must be displayed.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsCheckMarksProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsCheckMarks"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsCheckMarksChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsCheckMarks"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksValues">
            <summary>
            Gets or sets a value indicating if the row selection column must be displayed.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksValuesProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksValues"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksValuesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksValues"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnIndex">
            <summary>
            Gets or sets the column index of the selectors column.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnIndexProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnIndex"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnIndexChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnIndex"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnHeaderStyle">
            <summary>
            Gets or sets the style of the selector column header.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnHeaderStyleProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnHeaderStyle"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnHeaderTemplate">
            <summary>
            Gets or sets the template for the selector column header.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnHeaderTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnHeaderTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnHeaderTemplateSelector">
            <summary>
            Gets or sets a template selector for the selector column header.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnHeaderTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarksColumnHeaderTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellStyle">
            <summary>
            Gets or sets the style of the selector cell.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellStyleProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellStyle"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellTemplate">
            <summary>
            Gets or sets a specific template for selector cells.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellTemplateSelector">
            <summary>
            Gets or sets a template selector for selector cells.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellEditingTemplate">
            <summary>
            Gets or sets a template to be applied when selector cells are being edited.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellEditingTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellEditingTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellEditingTemplateSelector">
            <summary>
            Gets or sets a template selector for selector cells in edit mode.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellEditingTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CheckMarkCellEditingTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsIDs">
            <summary>
            Gets or sets a value indicating if a column showing indexes must be shown.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsIDsProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsIDs"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsIDsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ShowsIDs"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.DisplayedIDs">
            <summary>
            Gets the list of indexes currently displayed on the grid.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.DisplayedIDsProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.DisplayedIDs"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsStartFromZero">
            <summary>
            Gets or sets a value indicating if ID numbers 
            should start from 0 instead of 1.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsStartFromZeroProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsStartFromZero"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsStartFromZeroChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsStartFromZero"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnIndex">
            <summary>
            Gets or sets the column index of the IDs column.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnIndexProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnIndex"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnIndexChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnIndex"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnHeaderStyle">
            <summary>
            Gets or sets the style of the index column header.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnHeaderStyleProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnHeaderStyle"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnHeaderTemplate">
            <summary>
            Gets or sets the template for the index column header.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnHeaderTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnHeaderTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnHeaderTemplateSelector">
            <summary>
            Gets or sets a template selector for the index column header.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnHeaderTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdsColumnHeaderTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdCellStyle">
            <summary>
            Gets or sets the style of the ID cell.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdCellStyleProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdCellStyle"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdCellTemplate">
            <summary>
            Gets or sets a specific template for ID cells.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdCellTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdCellTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdCellTemplateSelector">
            <summary>
            Gets or sets a template selector for ID cells.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdCellTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.IdCellTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CellTemplate">
            <summary>
            Gets or sets a uniform template for cells.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CellTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CellTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CellTemplateSelector">
            <summary>
            Gets or sets a template selector for cells.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CellTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CellTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CellEditingTemplate">
            <summary>
            Gets or sets a uniform template to be applied when cells are being edited.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CellEditingTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CellEditingTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CellEditingTemplateSelector">
            <summary>
            Gets or sets a template selector for cells in edit mode.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CellEditingTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CellEditingTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ColumnHeaderTemplate">
            <summary>
            Gets or sets a template for column headers.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ColumnHeaderTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ColumnHeaderTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ColumnHeaderTemplateSelector">
            <summary>
            Gets or sets a template selector for column headers.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ColumnHeaderTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.ColumnHeaderTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.OnInitializingNewItem(System.Windows.Controls.InitializingNewItemEventArgs)">
            <summary>
            Called whenever the DataGrid attempts to create a new item. Tries to update source accordingly.
            </summary>
            <param name="e">Item creation event information.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.OnExecutedCommitEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Called whenever a change is validated in a cell.
            </summary>
            <param name="e">Information about value change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.CancelEditWithCare">
            <summary>
            Cancels edition while handling any source de-synchronization that might occur.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.OnExecutedDelete(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Called whenever an item is deleted from the DataGrid. Updates source accordingly.
            </summary>
            <param name="e">Delete event information.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.OnColumnReordered(System.Windows.Controls.DataGridColumnEventArgs)">
            <summary>
            Processes column reordering, especially for index and selector columns 
            when allowed to do so.
            </summary>
            <param name="e">Event info.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.OnSorting(System.Windows.Controls.DataGridSortingEventArgs)">
            <summary>
            Occurs whenever a column is being sorted.
            </summary>
            <param name="eventArgs">Event information.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid.GetCurrentSortMemberPath">
            <summary>
            Returns the currently sorted column member path.
            </summary>
            <returns>A property name for sorting.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.PagedDataGridTemplateColumn">
            <summary>
            Used to enhance <see cref="T:System.Windows.Controls.DataGridTemplateColumn"/> by offering additional
            properties like column name and changing some methods like OnCopyingCellClipboardContent.
            </summary>
            <remarks>Used with <see cref="T:MaterialDesignThemes.Wpf.AddOns.PagedDataGrid"/>.</remarks>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGridTemplateColumn.IsIDsColumn">
            <summary>
            Gets a value indicating if the column
            if used to display unique IDs. 
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PagedDataGridTemplateColumn.IsSelectColumn">
            <summary>
            Gets a value indicating if the column
            if used to display line selection boxes.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGridTemplateColumn.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initiates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.PagedDataGridTemplateColumn"/>.
            </summary>
            <param name="asIdColumn">Set this if this column is used to show IDs.</param>
            <param name="asSelectColumn">Set this if this column is used to show line selection boxes.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PagedDataGridTemplateColumn.OnCopyingCellClipboardContent(System.Object)">
            <summary>
            Overrides the default <see cref="T:System.Windows.Controls.DataGridTemplateColumn"/> behavior
            of this method to retrieve value from any "ToString()" computations.
            </summary>
            <param name="item">A <see cref="T:System.Data.DataRowView"/> object passed by the framework.</param>
            <returns>A string representation of the given row object.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.PressBorder">
            <summary>
            A container that catches click/touch and understands 
            if user is pressing an object inside it or not.
            Basically gives "pressed" state capability to all contained objects. 
            Use a transparent background for its style to catch clicks/touches
            in blank zones within.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PressBorder.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Exploit render property to find parent and bypass its preview events.
            </summary>
            <param name="drawingContext">Drawing context info.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PressBorder.PressControl_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Unsubscribe event handlers from parent if it exists.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">Event info.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PressBorder.Parent_PreviewMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles event of parent when the later is being clicked.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">Event info.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PressBorder.Parent_PreviewTouchDown(System.Object,System.Windows.Input.TouchEventArgs)">
            <summary>
            Handles touch event from parent when the latter is being clicked.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">Event info.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PressBorder.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            In case no parent is found, launches press command execution for click event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PressBorder.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)">
            <summary>
            In case no parent is found, launches press command execution for touch event.
            </summary>
            <param name="e">Event info.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PressBorder.EvaluateClickState(System.Object,System.EventArgs)">
            <summary>
            Evaluates if the user is still pressing the mouse or touch and launches release command execution if existing.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">Event info.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PressBorder.Touch_FrameReported(System.Object,System.Windows.Input.TouchFrameEventArgs)">
            <summary>
            Monitors touch state to execute release command when touch is released.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">Event info.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PressBorder.TriggerPressEvent(System.Boolean)">
            <summary>
            Execute press command when existing, starts timer to handle release if release command exists.
            </summary>
            <param name="usedTouch">Indicates if touch was used to press.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.PressBorder.TriggerReleaseEvent">
            <summary>
            Execute release command if existing.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PressBorder.PressCommand">
            <summary>
            Gets or sets the command that must be invoked when control is pressed.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PressBorder.PressCommandProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PressBorder.PressCommand"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PressBorder.ReleaseCommand">
            <summary>
            Gets or sets the command that must be invoked when button is released.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PressBorder.ReleaseCommandProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PressBorder.ReleaseCommand"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.PressBorder.IsPressed">
            <summary>
            Gets the pressed status of the control.
            </summary>
            <remarks>A bit different than Button.IsPressed as it does not handle
            space bar and event system.</remarks>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.PressBorder.IsPressedProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.PressBorder.IsPressed"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.SelectBox">
            <summary>
            A <see cref="T:MaterialDesignThemes.Wpf.AddOns.FilterBox"/> implementation with a <see cref="T:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup"/> for
            items display. 
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox._currentFilterTextBox">
            <summary>
            The current <see cref="T:System.Windows.Controls.TextBox"/> holding the filter.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox._itemIsSelectedProperty">
            <summary>
            Holds description of the property bound to item's <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.IsSelected"/> property.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox._popup">
            <summary>
            The control's popup.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.#ctor">
            <summary>
            Creates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.SelectBox"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.SelectBox"/> type.
            Override some base dependency properties.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.OnItemsSourceChanged">
            <summary>
            Occurs whenever the item source property changes.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.OnApplyTemplate">
            <summary>
            Occurs on template application.
            </summary>
            <exception cref="T:System.Exception">Thrown when a template part cannot be found.</exception>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.ClearAllFilterText">
            <summary>
            Clears the filters along with TextBox cache.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.OnFocusDropped">
            <summary>
            Called whenever the control closes on focus drop.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs whenever a key from keyboard is pressed.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.SetFocusOnItem(System.Object)">
            <summary>
            Sets the current focus on a given item.
            </summary>
            <param name="item">The item to focus on.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.SetFocusOnPopup">
            <summary>
            Gives focus to the managed popup.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.SetAsUnSelected(System.Object)">
            <summary>
            Clears selection state of a given item.
            </summary>
            <param name="item">The item to be unselected.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.ApplyFilter(System.Boolean,System.Boolean)">
            <summary>
            Applies current filter on items. 
            </summary>
            <param name="force">Forces filtering even if filter value did not change.</param>
            <param name="appliedOnOpening">Indicates if filter is being applied on popup opening.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.ToggleOpenStateCommand">
            <summary>
            Gets the command to toggle the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IsOpen"/> state.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IsOpen">
            <summary>
            Gets or sets a value indicating if the select box is open.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.IsOpenProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IsOpen"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.IsOpenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IsOpen"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IsSelectedMemberPath">
            <summary>
            Gets or sets a value indicating the path to item bool property on
            which the IsSelected state of items is bound.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.IsSelectedMemberPathProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IsSelectedMemberPath"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.ItemIsSelectedMemberPathChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IsSelectedMemberPath"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.OnIsSelectedPropertyChanged">
            <summary>
            Occurs whenever the <see cref="F:MaterialDesignThemes.Wpf.AddOns.SelectBox._itemIsSelectedProperty"/> changes.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.ShouldCloseOnPopupButtonsClicks">
            <summary>
            Gets or sets a value indicating if popup should automatically close when
            one of its child buttons is pressed. 
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.ShouldCloseOnPopupButtonsClicksProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.ShouldCloseOnPopupButtonsClicks"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.MaxDropDownHeight">
            <summary>
            Gets or sets the maximum height for the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.MaxDropDownHeightProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.MaxDropDownHeight"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentTemplate">
            <summary>
            Gets or sets the template of the additional content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentTemplateSelector">
            <summary>
            Gets or sets the template selector of the additional content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentActionCommand">
            <summary>
            Gets or sets the command to be called when the additional action button is hit.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentActionCommandProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentActionCommand"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentNoSelectionText">
            <summary>
            Gets or sets the text to be displayed on the additional content when no items are selected.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentNoSelectionTextProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentNoSelectionText"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentOnSelectionText">
            <summary>
            Gets or sets the text to be displayed on the additional content action button when an item is selected.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentOnSelectionTextProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentOnSelectionText"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentActionAlwaysShown">
            <summary>
            Gets or sets a value indicating if the action in additional
            content must be always shown and not hidden when there is no selection.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentActionAlwaysShownProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.AdditionalContentActionAlwaysShown"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IconKind">
            <summary>
            Gets or sets the kind of the icon.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.IconKindProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IconKind"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IconForeground">
            <summary>
            Gets or sets the foreground for toggle icon.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.IconForegroundProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IconForeground"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IconKindWhenOpen">
            <summary>
            Gets or sets the kind of the icon when the control is open.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBox.IconKindWhenOpenProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBox.IconKindWhenOpen"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Indicates if the child item is its own container (i.e. a visual object).
            </summary>
            <param name="item">The item to be checked.</param>
            <returns>True is item is its own container.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.GetContainerForItemOverride">
            <summary>
            Provides a visual object to a given item.
            </summary>
            <returns>A pre-initialized <see cref="T:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem"/>.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBox.GetSelectBoxItem(System.Object)">
            <summary>
            Gets the visual item of a given source item.
            </summary>
            <param name="item">The item to be retrieved.</param>
            <returns>The item itself if a visual item or the generated visual item if of other type.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem">
            <summary>
            Item for <see cref="T:MaterialDesignThemes.Wpf.AddOns.SelectBox"/> control.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.#ctor(System.String,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem"/>.
            </summary>
            <param name="initialFilter">Initial filter to be applied on the item.</param>
            <param name="highlightPerFilterWord">Indicates if highlight must occur on a per filter word basis or on the whole filter string.</param>
            <param name="ignoreCaseWhenFiltering">If true, ignores casing during filtering.</param>
            <param name="isSelectedSourceMemberPath">Member path to the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.IsSelected"/> property.</param>
            <param name="isPreselected">Initial preselection state.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem"/> type.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.SetAsPreselected">
            <summary>
            Sets the item in the preselected mode.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.SetAsNotPreselected">
            <summary>
            Unsets preselection mode.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called whenever a key from keyboard is pressed on the item.
            </summary>
            <param name="e">Keyboard event args.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called whenever mouse is pressed on the item.
            </summary>
            <param name="e">Mouse event args.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs whenever the mouse comes over the control.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs whenever leaves the control.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Occurs whenever the control gets focused.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Occurs whenever the control looses focus.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.UpdateVisualState">
            <summary>
            Updates the current item visual state.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.ToggleSelection">
            <summary>
            Toggle the selected state of the item.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.IsSelected">
            <summary>
            Gets or sets a value indicating if the item is selected.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.IsSelectedProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.IsSelected"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.IsSelectedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.IsSelected"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.CanUseCheckBoxForSelection">
            <summary>
            Gets or sets a value indicating if the item must be selected with a <see cref="T:System.Windows.Controls.CheckBox"/>.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.CanUseCheckBoxForSelectionProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.CanUseCheckBoxForSelection"/> as a dependency property.
            </summary>
        </member>
        <member name="E:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.IsSelectedChanged">
            <summary>
            Adds or removes event handlers for selection changed events.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.IsSelectedChangedEvent">
            <summary>
            Registers <see cref="E:MaterialDesignThemes.Wpf.AddOns.SelectBoxItem.IsSelectedChanged"/> as a routed event.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopupPlacement">
            <summary>
            Defines the internal placement of the combobox.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopupPlacement.Undefined">
            <summary>
            Unforced.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopupPlacement.Down">
            <summary>
            Forced to Down.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopupPlacement.Up">
            <summary>
            Forced to Up.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopupPlacement.Classic">
            <summary>
            Forced to classic mode.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup">
            <summary>
            A popup to be used by <see cref="T:MaterialDesignThemes.Wpf.AddOns.SelectBox"/> controls and derived controls.
            Holds a <see cref="T:System.Windows.Controls.TextBox"/>.
            </summary>
            <remarks>Adapted from https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit ComboBoxPopup.</remarks>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.CurrentPopupFilterTextBox">
            <summary>
            Gets the current filtering TextBox within this popup is any.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup"/> type.
            Override some base dependency properties.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs whenever a dependency property changes.
            </summary>
            <param name="e">Information about property value change.</param>
        </member>
        <member name="E:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.FilterTextBoxChanged">
            <summary>
            Adds or removes event handlers for template change event.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup._filterTextBoxChangedEvent">
            <summary>
            Registers <see cref="E:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.FilterTextBoxChanged"/> as a routed event.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.DownContentTemplate">
            <summary>
            The template to be used when the popup opens at the bottom of the main TextBox.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.DownContentTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.DownContentTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.UpContentTemplate">
            <summary>
            The template to be used when the popup opens on top of the main TextBox by
            lack of screen space below. 
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.UpContentTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.UpContentTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ClassicContentTemplate">
            <summary>
            The template to be used when the popup opens separately from the main TextBox. Always overrides
            <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.DownContentTemplate"/> and <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.UpContentTemplate"/> when <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ClassicMode"/>
            is set to true.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ClassicContentTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ClassicContentTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.UpVerticalOffset">
            <summary>
            Vertical offset in pixels for the popup when opening above the main TextBox.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.UpVerticalOffsetProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.UpVerticalOffset"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.DownVerticalOffset">
            <summary>
            Vertical offset in pixels for the popup when opening below the main TextBox.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.DownVerticalOffsetProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.DownVerticalOffset"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.DefaultVerticalOffset">
            <summary>
            Sets the default offset of the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.DefaultVerticalOffsetProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.DefaultVerticalOffset"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.RelativeHorizontalOffset">
            <summary>
            Gets or sets the horizontal offset of the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.RelativeHorizontalOffsetProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.RelativeHorizontalOffset"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.PopupPlacement">
            <summary>
            Gets or sets the placement of the popup around the main TextBox.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.PopupPlacementProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.PopupPlacement"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ClassicMode">
            <summary>
            Indicates if classic mode should be used.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ClassicModeProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ClassicMode"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.CornerRadius">
            <summary>
            Gets or sets the corner radius of the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.CornerRadiusProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.CornerRadius"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ContentMargin">
            <summary>
            Gets or sets the margin for the popup content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ContentMarginProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ContentMargin"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ContentMinWidth">
            <summary>
            Gets or sets the minimum width for the content of the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ContentMinWidthProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.ContentMinWidth"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.Background">
            <summary>
            Gets or sets the popup background.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.BackgroundProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.Background"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup.#ctor">
            <summary>
            Initiates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.SelectBoxPopup"/>.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox">
            <summary>
            Displays items to select them quickly through a persistent ComboBox-like popup.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.#ctor">
            <summary>
            Creates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox"/> type.
            Override some base dependency properties.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.OnApplyTemplate">
            <summary>
            Occurs on template application.
            </summary>
            <exception cref="T:System.Exception">Thrown when a template part cannot be found.</exception>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.ItemTemplateOrTemplateSelectorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate"/> property changes.
            Synchronizes the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemTemplate"/> and <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemTemplateSelector"/> properties when defaulted.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.OnFilterApplied">
            <summary>
            Called whenever the filter value changes and filtering is processed.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs whenever a key from keyboard is pressed.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.GoToSelectedItemCommand">
            <summary>
            Gets the command that gives focus to the selected item.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.ClearSelectionCommand">
            <summary>
            Gets the command to clear current selection.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItem">
            <summary>
            Gets or sets the currently selected item.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItem"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItem"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.HasASelectedItem">
            <summary>
            Gets a value indicating if an item is currently selected.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.HasASelectedItemProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.HasASelectedItem"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.IsSelectedItemFilteredOut">
            <summary>
            Gets a value indicating the currently selected item does not pass current filter.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.IsSelectedItemFilteredOutProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.IsSelectedItemFilteredOut"/> as a readonly dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.ShouldCloseOnSelection">
            <summary>
            Gets or sets a value indicating if the popup must be automatically
            close on item selection or selection change.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.ShouldCloseOnSelectionProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.ShouldCloseOnSelection"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemTemplate">
            <summary>
            Gets or sets the template of the selected item.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemTemplate"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemTemplateSelector">
            <summary>
            Gets or sets the template selector of the selected item.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemTemplateSelectorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.SelectedItemTemplateSelector"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.TextForSelectedItem">
            <summary>
            Gets or sets the text to be displayed near the selected item.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.TextForSelectedItemProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.TextForSelectedItem"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.TextForSelectedItemWhenFilteredOut">
            <summary>
            Gets or sets the text to be displayed when <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.IsSelectedItemFilteredOut"/> is true.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.TextForSelectedItemWhenFilteredOutProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.TextForSelectedItemWhenFilteredOut"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.GoToSelectionHint">
            <summary>
            Gets or sets the hint for selection focus.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.GoToSelectionHintProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.GoToSelectionHint"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.IsSelectedItemFilteredOutHint">
            <summary>
            Gets or sets the hint to be displayed when <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.IsSelectedItemFilteredOut"/> is true.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.IsSelectedItemFilteredOutHintProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.IsSelectedItemFilteredOutHint"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.CopySelectionHint">
            <summary>
            Gets or sets the hint for selection copy.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.CopySelectionHintProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.CopySelectionHint"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.ClearSelectionHint">
            <summary>
            Gets or sets the hint for selection clearing.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.ClearSelectionHintProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.ClearSelectionHint"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.CopySelectedItemCommand">
            <summary>
            Gets or sets a command that will be triggered when the copy button is pressed.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.CopySelectedItemCommandProperty">
            <summary>
            Registers <see cref="F:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.CopySelectedItemCommandProperty"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SingleSelectBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Occurs whenever an item visual is being constructed. 
            </summary>
            <param name="element">The visual element in construction.</param>
            <param name="item">The corresponding item from the <see cref="P:System.Windows.Controls.ItemsControl.Items"/> collection.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.SplitButton">
            <summary>
            A button that can display a popup when clicking on its inner toggle button.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SplitButton.OnApplyTemplate">
            <summary>
            Occurs on template application.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SplitButton.OnClick">
            <summary>
            Occurs on button click.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SplitButton.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called whenever the control is clicked.
            </summary>
            <param name="e">Information about the click event.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SplitButton.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)">
            <summary>
            Called whenever the control is touched.
            </summary>
            <param name="e">Information about the touch event.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.IsOpen">
            <summary>
            Gets or sets a value indicating if popup is open.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitButton.IsOpenProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.IsOpen"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.PopupContent">
            <summary>
            Gets or sets the content to display in the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitButton.PopupContentProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.PopupContent"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.PopupContentTemplate">
            <summary>
            Gets or sets the template of the content to display in the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitButton.PopupContentTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.PopupContentTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.PopupContentTemplateSelector">
            <summary>
            Gets or sets the template selector of the content to display in the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitButton.PopupContentTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.PopupContentTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.MaxDropDownHeight">
            <summary>
            The maximum height of the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitButton.MaxDropDownHeightProperty">
            <summary>
             Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.MaxDropDownHeight"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.ToggleStyle">
            <summary>
            Gets or sets the style of the toggle button that opens the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitButton.ToggleStyleProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.ToggleStyle"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.ShouldCloseOnPopupButtonsClicks">
            <summary>
            Gets or sets a value indicating if the popup should be closed
            when one of its inner buttons is clicked.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitButton.ShouldCloseOnPopupButtonsClicksProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.ShouldCloseOnPopupButtonsClicks"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.ToggleIconKind">
            <summary>
            Gets or sets the kind of the icon to be displayed in the toggle button.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitButton.ToggleIconKindProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitButton.ToggleIconKind"/> as a dependency property.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton">
            <summary>
            A button that can display a popup when clicking on its inner toggle button.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.#ctor">
            <summary>
            Creates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.OnApplyTemplate">
            <summary>
            Occurs on template application.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.IsOpen">
            <summary>
            Gets or sets a value indicating if popup is open.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.IsOpenProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.IsOpen"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.PopupContent">
            <summary>
            Gets or sets the content to display in the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.PopupContentProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.PopupContent"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.PopupContentTemplate">
            <summary>
            Gets or sets the template of the content to display in the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.PopupContentTemplateProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.PopupContentTemplate"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.PopupContentTemplateSelector">
            <summary>
            Gets or sets the template selector of the content to display in the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.PopupContentTemplateSelectorProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.PopupContentTemplateSelector"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.MaxDropDownHeight">
            <summary>
            The maximum height of the popup.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.MaxDropDownHeightProperty">
            <summary>
             Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.MaxDropDownHeight"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.ShouldCloseOnPopupButtonsClicks">
            <summary>
            Gets or sets a value indicating if the popup should be closed
            when one of its inner buttons is clicked.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.ShouldCloseOnPopupButtonsClicksProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.ShouldCloseOnPopupButtonsClicks"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.TrailingIconKind">
            <summary>
            Gets or sets the kind of the icon to be displayed on the right of the button.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.TrailingIconKindProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.TrailingIconKind"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.TrailingIconMargin">
            <summary>
            Gets or sets the margin of the trailing icon.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.TrailingIconMarginProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.TrailingIconMargin"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.TrailingIconSize">
            <summary>
            Gets or sets the size of the trailing icon.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.TrailingIconSizeProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.SplitToggleButton.TrailingIconSize"/> as a dependency property.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.ThreeStateCheckBox">
            <summary>
            An extension of the checkbox control.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ThreeStateCheckBox.IsThreeStateOrderInverted">
            <summary>
            Gets or sets a value that allows three state order inversion
            when switching state.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ThreeStateCheckBox.IsThreeStateOrderInvertedProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.ThreeStateCheckBox.IsThreeStateOrderInverted"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ThreeStateCheckBox.OnToggle">
            <summary>
            Override of toggle to perform custom actions.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar">
            <summary>
            A toast message that can appear anywhere and can be dismissed.
            </summary>
            <remarks>Overrides MD's snackbar, which has the similar behavior.</remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.#ctor">
            <summary>
            Initiates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.#cctor">
            <summary>
            Static constructor for <see cref="T:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar"/> type.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.InnerMessageChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs whenever the <see cref="P:MaterialDesignThemes.Wpf.Snackbar.Message"/> property changes.
            </summary>
            <param name="sender">Object that triggered the event.</param>
            <param name="args">Event info.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.Close(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the ToastNotification must be closed.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.CurrentNotificationType">
            <summary>
            MessageQueue property override to match our own message queue <see cref="T:MaterialDesignThemes.Wpf.AddOns.NotificationQueue"/> type.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.CurrentNotificationTypeProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.MessageQueue"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.Message">
            <summary>
            Gets or sets the message.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.MessageProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.Message"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.MessageChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.Message"/> property changes.
            </summary>
            <param name="sender">Object that triggered the event.</param>
            <param name="args">Event info.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.MessageQueue">
            <summary>
            MessageQueue property override to match our own message queue <see cref="T:MaterialDesignThemes.Wpf.AddOns.NotificationQueue"/> type.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.MessageQueueProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.MessageQueue"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.MessageQueuePropertyChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Override of base private handler so we correctly pair to our own definition of <see cref="T:MaterialDesignThemes.Wpf.AddOns.NotificationQueue"/>.
            </summary>
            <param name="dependencyObject">Bar that triggered the event.</param>
            <param name="dependencyPropertyChangedEventArgs">New property value information.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.SecondaryActionButtonStyle">
            <summary>
            Gets or sets the style to be applied to the secondary button.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.SecondaryActionButtonStyleProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.SecondaryActionButtonStyle"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.AreActionButtonPositionsInverted">
            <summary>
            Gets or sets a value indicating if the action buttons must be inverted in template.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.AreActionButtonPositionsInvertedProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.AreActionButtonPositionsInverted"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.DismissOnActionButtonClick">
            <summary>
            Gets or sets a value indicating if dismissing is active when clicking action buttons (defaults to true).
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.DismissOnActionButtonClickProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.DismissOnActionButtonClick"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.DismissOnActionButtonClickChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.DismissOnActionButtonClick"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.RegisterDismissOnClickEvents">
            <summary>
            Registers event handlers for message clicks management.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ToastNotificationBar.UnregisterDismissOnClickEvents">
            <summary>
            Clear event handlers for message clicks management.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.ToggleButtonIconPlacement">
            <summary>
            Represents placement of the icon for a <see cref="T:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon"/>.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToggleButtonIconPlacement.Left">
            <summary>
            Icon is placed on the left of the content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToggleButtonIconPlacement.Right">
            <summary>
            Icon is placed on the right of the content.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon">
            <summary>
            A toggle button allowing to display a button with its content.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.ContentTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.Icon">
            <summary>
            Gets or sets the icon to be displayed next to button content.
            </summary>
            <remarks>Setting this property will override <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconKind"/> and <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconSize"/>.</remarks>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.Icon"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.Icon"/> property changes.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconKind">
            <summary>
            Gets or sets the kind of the icon to be displayed next to button content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconKindProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconKind"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconPlacement">
            <summary>
            Gets or sets the icon to be displayed next to button content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconPlacementProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconPlacement"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconSpacing">
            <summary>
            Gets or sets the margin of the icon towards button's content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconSpacingProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconSpacing"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconSize">
            <summary>
            Gets or sets the size of the icon.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconSizeProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconSize"/> as a dependency property.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.ContentMargin">
            <summary>
            Gets or sets the margin of the main toggle button content.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.ContentMarginProperty">
            <summary>
            Registers the <see cref="P:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.ContentMargin"/> as a dependency property.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.ToggleButtonWithIcon.IconRelatedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called whenever a dependency property related to the added icon is modified.
            </summary>
            <param name="sender">The object whose property changed.</param>
            <param name="args">Information about the property change.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.BindingProxy">
            <summary>
            A class used to bind DynamicResources on objects that normally do not allow them.
            </summary>
            <remarks>From: https://www.thomaslevesque.com/2011/03/21/wpf-how-to-bind-to-data-when-the-datacontext-is-not-inherited/
            See also for a more complete solution: https://stackoverflow.com/questions/33816511/how-can-you-bind-to-a-dynamicresource-so-you-can-use-a-converter-or-stringformat
            </remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.BindingProxy.CreateInstanceCore">
            <summary>
            Creates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.BindingProxy"/>.
            </summary>
            <returns>A new instance of the class</returns>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.BindingProxy.Data">
            <summary>
            Gets or sets the data associated to this binding proxy.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Utils.BindingProxy.DataProperty">
            <summary>
            Registers <see cref="P:MaterialDesignThemes.Wpf.AddOns.Utils.BindingProxy.Data"/> as a dependency property.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.Caching.TextBoxCache">
            <summary>
            A helper class to store <see cref="T:System.Windows.Controls.TextBox"/> information
            for later reload.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Caching.TextBoxCache.Cache(System.Windows.Controls.TextBox)">
            <summary>
            Store information about a given <see cref="T:System.Windows.Controls.TextBox"/>
            in the cache.
            </summary>
            <param name="textBox">The <see cref="T:System.Windows.Controls.TextBox"/> to store information from.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Caching.TextBoxCache.SetFromCache(System.Windows.Controls.TextBox)">
            <summary>
            Updates a given <see cref="T:System.Windows.Controls.TextBox"/> with cached information.
            </summary>
            <param name="textBox">The <see cref="T:System.Windows.Controls.TextBox"/> to be updated.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Caching.TextBoxCache.ClearCache">
            <summary>
            Clears the current cached information.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.ColorHelper">
            <summary>
            An helper class for color processing.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.ColorHelper.DefaultColor">
            <summary>
            Default color to be used when color conversions fail.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.ColorHelper.SystemColors">
            <summary>
            Gets the list of system colors as <see cref="T:MaterialDesignThemes.Wpf.AddOns.BrushItem"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.ColorHelper.GenerateSystemColorsFromBrushes">
            <summary>
            Generates the list of system colors as <see cref="T:MaterialDesignThemes.Wpf.AddOns.BrushItem"/>.
            </summary>
            <returns>The list of system colors.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.ColorHelper.GetNullableColorFromArgb(System.String,System.Nullable{System.Double})">
            <summary>
            Converts a ARGB hexadecimal string value to a color
            brush that matches it, or sends null is passed value is invalid.
            </summary>
            <param name="hexValue">The hexadecimal value representing the color.</param>
            <param name="opacity">Optional opacity value that will determine the alpha channel value.</param>
            <returns>A <see cref="T:System.Windows.Media.Color"/> that matches the passed string hexadecimal value 
            or null is no matching found.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.ColorHelper.GetColorFromArgb(System.String,System.Nullable{System.Double})">
            <summary>
            Converts a ARGB hexadecimal string value to a color
            brush that matches it.
            </summary>
            <param name="hexValue">The hexadecimal value representing the color.</param>
            <param name="opacity">Optional opacity value that will determine the alpha channel value.</param>
            <returns>A <see cref="T:System.Windows.Media.Color"/> that matches the passed string hexadecimal value or
            default color if no matching is found.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.ColorHelper.GetSolidColorBrushFromArgb(System.String,System.Boolean)">
            <summary>
            Converts a ARGB hexadecimal string value to a solid color
            brush that matches it.
            </summary>
            <param name="hexValue">The hexadecimal value representing the color.</param>
            <param name="setOpacity">Sets opacity based on the alpha channel.</param>
            <returns>A <see cref="T:System.Windows.Media.SolidColorBrush"/> that matches the passed string hexadecimal value.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.ColorHelper.GetOpacityFromArgb(System.String)">
            <summary>
            Gets an opacity value (between 0.0d and 1.0d) from a color ARGB representation.
            </summary>
            <param name="hexValue">The hexadecimal value representing the color.</param>
            <returns>An opacity value corresponding to the alpha channel of the color.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.ColorHelper.GetNullableColorFromHslParameters(System.Double,System.Double,System.Double)">
            <summary>
            Gets a color from passed HSL (Hue, Saturation and Luminosity) parameters.
            </summary>
            <param name="hue">The hue of the color to create.</param>
            <param name="saturation">The saturation of the color to create.</param>
            <param name="luminosity">The luminosity of the color to create.</param>
            <returns>A <see cref="T:System.Windows.Media.Color"/> that matches the passed HSL parameters.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.ColorHelper.GetColorFromHslParameters(System.Double,System.Double,System.Double)">
            <summary>
            Gets a color from passed HSL (Hue, Saturation and Luminosity) parameters.
            </summary>
            <param name="hue">The hue of the color to create.</param>
            <param name="saturation">The saturation of the color to create.</param>
            <param name="luminosity">The luminosity of the color to create.</param>
            <returns>A <see cref="T:System.Windows.Media.Color"/> that matches the passed HSL parameters or the 
            default color in case an error occurs.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.ColorHelper.GetRgbStringFromColor(System.Windows.Media.Color)">
            <summary>
            Converts a <see cref="T:System.Windows.Media.Color"/> as object into a <see cref="T:System.String"/>.
            </summary>
            <param name="color">The <see cref="T:System.Windows.Media.Color"/> to be converted.</param>
            <returns>The corresponding <see cref="T:System.String"/> object.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.ColorHelper.GetArgbStringFromColor(System.Windows.Media.Color,System.Nullable{System.Double})">
            <summary>
            Converts a <see cref="T:System.Windows.Media.Color"/> as object into a <see cref="T:System.String"/>.
            </summary>
            <param name="color">The <see cref="T:System.Windows.Media.Color"/> to be converted.</param>
            <param name="opacity">An optional opacity value between 0.0 and 1.0 to be added as alpha channel in the final string.</param>
            <returns>The corresponding <see cref="T:System.String"/> object.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor">
            <summary>
            A color that is specified by Hue, Saturation and Luminosity levels (HSL)
            and acts as a converter to/for other color systems used in .NET Framework.
            </summary>
            <remarks>Adapted from: https://richnewman.wordpress.com/about/code-listings-and-diagrams/hslcolor-class/</remarks>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.Hue">
            <summary>
            Gets or sets the current color Hue.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.Saturation">
            <summary>
            Gets or sets the current color saturation.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.Luminosity">
            <summary>
            Gets or sets the current color luminosity.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.AsDrawingColor">
            <summary>
            Gets the HSL color as <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.AsMediaColor">
            <summary>
            Gets the HSL color as <see cref="T:System.Windows.Media.Color"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.op_Implicit(System.Windows.Media.Color)~MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor">
            <summary>
            Cast from <see cref="T:System.Windows.Media.Color"/> to <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor"/>.
            </summary>
            <param name="color">The color to be casted.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.op_Implicit(MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor)~System.Windows.Media.Color">
            <summary>
            Cast from <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor"/> to <see cref="T:System.Windows.Media.Color"/>.
            </summary>
            <param name="hslColor">The HSL color to be casted.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.op_Implicit(System.Drawing.Color)~MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor">
            <summary>
            Cast from <see cref="T:System.Drawing.Color"/> to <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor"/>.
            </summary>
            <param name="color">The color to be casted.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.op_Implicit(MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor)~System.Drawing.Color">
            <summary>
            Cast from <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor"/> to <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="hslColor">The HSL color to be casted.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.CheckRange(System.Double)">
            <summary>
            Checks if a main property value is in range.
            </summary>
            <param name="value">The value to be checked.</param>
            <returns>True if in range.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.SetRgb(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the current color using RGB code.
            </summary>
            <param name="red">Red value.</param>
            <param name="green">Green value.</param>
            <param name="blue">Blue value.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.#ctor">
            <summary>
            Initiates a default instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.#ctor(System.Drawing.Color)">
            <summary>
            Initiates an instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor"/> from a <see cref="T:System.Drawing.Color"/> object.
            </summary>
            <param name="color">Seed color.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.#ctor(System.Windows.Media.Color)">
            <summary>
            Initiates an instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor"/> from a <see cref="T:System.Windows.Media.Color"/> object.
            </summary>
            <param name="color">Seed color.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initiates an instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor"/> from a RGB code.
            </summary>
            <param name="red">Red value.</param>
            <param name="green">Green value.</param>
            <param name="blue">Blue value.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initiates an instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.Colors.HslColor"/> from HSL parameters.
            </summary>
            <param name="hue">Hue of the color.</param>
            <param name="saturation">Saturation of the color.</param>
            <param name="luminosity">Luminosity of the color.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleCommand">
            <summary>
            Provides a simple implementation of <see cref="T:System.Windows.Input.ICommand"/> for internal usage.
            </summary>
            <remarks>Has no execution parameters.</remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleCommand.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            Initiates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleCommand"/>.
            </summary>
            <param name="execute">A function the command should execute.</param>
            <param name="canExecute">Optional function to check if command can execute (always true if null).</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleParameterizedCommand">
            <summary>
            Provides a simple implementation of <see cref="T:System.Windows.Input.ICommand"/> for internal usage.
            </summary>
            <remarks>Supports parameter.</remarks>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleParameterizedCommand._canExecute">
            <summary>
            Stores the function to be executed by the command.
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleParameterizedCommand._execute">
            <summary>
            Stores the external function to be called to check if command can be executed.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleParameterizedCommand.#ctor(System.Action{System.Object},System.Func{System.Boolean})">
            <summary>
            Initiates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleParameterizedCommand"/>.
            </summary>
            <param name="execute">A function the command should execute.</param>
            <param name="canExecute">Optional function to check if command can execute (always true if null).</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleParameterizedCommand.CanExecute(System.Object)">
            <summary>
            Indicates if the command can be executed for a given parameter.
            </summary>
            <param name="parameter">Input parameter.</param>
            <returns>True if the command can be executed.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleParameterizedCommand.Execute(System.Object)">
            <summary>
            Executes the command for a given parameter.
            </summary>
            <param name="parameter">Input parameter.</param>
        </member>
        <member name="E:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleParameterizedCommand.CanExecuteChanged">
            <summary>
            Notifies that <see cref="M:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleParameterizedCommand.CanExecute(System.Object)"/> state changed.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleParameterizedCommand.RaiseCanExecuteChanged">
            <summary>
            Causes a reevaluation of <see cref="M:MaterialDesignThemes.Wpf.AddOns.Utils.Commands.SimpleParameterizedCommand.CanExecute(System.Object)"/>.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckedStateChangedEventHandler">
            <summary>
            A delegate to be used to notify a check state change.
            </summary>
            <param name="sender">The object that sent the event.</param>
            <param name="e">The event parameters.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckedStateChangedEventArgs">
            <summary>
            A class to store checked changed event information.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckedStateChangedEventArgs.NewCheckedState">
            <summary>
            Gets the new boolean checked state of the object that sent the event.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckedStateChangedEventArgs.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initiates a new instance of <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckedStateChangedEventArgs"/>.
            </summary>
            <param name="newState">A new checked state to be stored.</param>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckMark">
            <summary>
            Represents an object that can be checked.
            </summary>
        </member>
        <member name="E:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckMark.IsCheckedChanged">
            <summary>
            Triggered with <see cref="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckMark.IsChecked"/> state changes.
            </summary>
        </member>
        <member name="E:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckMark.PropertyChanged">
            <summary>
            Triggered with <see cref="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckMark.IsChecked"/> state changes, stores less 
            info than <see cref="E:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckMark.IsCheckedChanged"/> but enables UI DataBinding.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckMark.IsChecked">
            <summary>
            Gets or sets the checked state.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckMark.ToString">
            <summary>
            Returns a string representation of item.
            </summary>
            <returns>The current <see cref="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckMark.IsChecked"/> value.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckMark.CompareTo(System.Object)">
            <summary>
            Compares this object with another one, returning -1 if current is less than
            comparison object, +1 is more and 0 is equal.
            Comparison rule is: IsChecked = true > false or null.
            </summary>
            <param name="obj">A <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckMark"/> to be compared.</param>
            <returns>Comparison result.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataGridCellToDataContextConverter">
            <summary>
            Extracts a DataContext object from a given <see cref="T:System.Windows.Controls.DataGridCell"/>.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataGridCellToDataContextConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Extracts a DataContext from a given <see cref="T:System.Windows.Controls.DataGridCell"/> item.
            </summary>
            <param name="value">A <see cref="T:System.Windows.Controls.DataGridCell"/> item to process.</param>
            <param name="targetType">Unused.</param>
            <param name="parameter">Unused.</param>
            <param name="culture">Unused.</param>
            <returns>The data value contained in the DataGrid cell.</returns>
            <exception cref="T:System.IndexOutOfRangeException">Thrown if cell structure is not well defined.</exception>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataGridCellToDataContextConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Unsupported conversion method.
            </summary>
            <param name="value">Unused.</param>
            <param name="targetType">Unused.</param>
            <param name="parameter">Unused.</param>
            <param name="culture">Unused.</param>
            <returns>Nothing.</returns>
            <exception cref="T:System.NotSupportedException">Thrown if this method is called.</exception>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataGridCellToDataContextConverter.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns an object that is provided as the value of the target property for this markup extension
            </summary>
            <param name="serviceProvider">A service provider helper that can provide services for the markup extension.</param>
            <returns>The object value to set on the property where the extension is applied.</returns>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager">
            <summary>
            A class to manage paging of items placed into an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.DefaultThresholdBgLoadSize">
            <summary>
            Indicates how item pool size for background loading.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.DefaultItemBgLoadSize">
            <summary>
            Indicates how many items are loaded per thread turn (also max size for background loading activation).
            </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager._handleExpando">
            <summary>
            Let Dynamitey library handle <see cref="T:System.Dynamic.ExpandoObject"/> objects.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.RowUpdateInformation">
            <summary>
            A data set to be used by background worker to load rows.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.RowUpdateInformation.Token">
            <summary>
            Gets the token associated with the stored data.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.RowUpdateInformation.CurrentIndex">
            <summary>
            Gets or changes the current index on the partial source to work on.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.RowUpdateInformation.PartialSource">
            <summary>
            The portion of the data source to be used for current page
            population.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.RowUpdateInformation.PartialSourceCount">
            <summary>
            Size of the source portions.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.RowUpdateInformation.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Object},System.Int32)">
            <summary>
            Initiates a new structure to pass information 
            about for row updates.
            </summary>
            <param name="token">Unique token associated to this dataset.</param>
            <param name="currentIndex">Current index on partial source.</param>
            <param name="partialSource">Portion of the global source that must be processed.</param>
            <param name="partialSourceCount">Optional size of this portion.</param>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.PagingEnabled">
            <summary>
            Gets or sets a value indicating if the <see cref="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.RecordsPerPage"/>
            property should be respected when producing the current page
            (if not, all source items will be returned in the current page).
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SourceItemsCount">
            <summary>
            Gets the total number of items in source.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CurrentPage">
            <summary>
            Gets or sets the current page as datable.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.IntermediatePropertyValueType">
            <summary>
            Gets or sets a common base type for source item properties to be used 
            for table generation, so columns would all be of this peculiar type.
            </summary>
            <remarks>Example: set as typeof(object) and any columns would accepts any input data.</remarks>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.RecordsPerPage">
            <summary>
            Gets or sets the number of records per page.
            A zero or negative value let paging but will force
            display of all source items on one page.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CurrentPageIndex">
            <summary>
            Gets the current page number.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CurrentPageRange">
            <summary>
            Gets the current minimum
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CurrentPageIsFirstPage">
            <summary>
            Gets a value indicating if the current page is the first available page.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CurrentPageIsLastPage">
            <summary>
            Gets a value indicating if the current page is the last available page.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CurrentPageIsFull">
            <summary>
            Gets a value indicating if the current page is full of items regarding to 
            the currently set page capacity.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.HasNoItems">
            <summary>
            Gets a value indicating if table has no items to display,
            meaning that the current source is null or cleared.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.HasMoreThanAPage">
            <summary>
            Gets a values indicating that more than one page is available.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.AreSourceItemsDynamic">
            <summary>
            Indicates if source items are dynamic 
            (i.e. implements IDynamicMetaObjectProvider, like ExpandoObject).
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.AreSourceItemsINotifyPropertyChanged">
            <summary>
            Indicates if source items implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.HasCheckmarks">
            <summary>
            Gets or sets a value indicating if a selection column
            (also called checkmarks) must be included in returned pages. 
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CheckMarksColumnPosition">
            <summary>
            Gets or sets the index of the column holding checkmarks.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.HasIndexes">
            <summary>
            Gets or sets a value indicating if indexes should be 
            included in the returned pages.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.IndexesColumnPosition">
            <summary>
            Gets or sets the index of the column holding indexes.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.DisplayedIndexes">
            <summary>
            Gets or sets the currently displayed indexes.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.Indexes">
            <summary>
            Gets the list of all indexes.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.IndexesStartAtZero">
            <summary>
            Gets or sets a value indicating if indexes should 
            start at zero instead of one.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CheckMarks">
            <summary>
            Gets or sets the current list of row checkmarks.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CheckMarkedRows">
            <summary>
            Gets or sets the current list of checked items in source list (checked rows).
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.AllRowsCheckMarkState">
            <summary>
            Gets the outline of row selections, i.e. will be true
            if all lines are selected, false if any, and null is some 
            are selected and some are not.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SortedSource">
            <summary>
            Gets a sorted version of the source.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SortedCheckMarks">
            <summary>
            Gets a sorted version of the internally used checkmarks.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.IsSorting">
            <summary>
            Gets a value indicating is sorting is occuring on the table.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SortingColumnIndex">
            <summary>
            Gets the index of the column that is used for sorting.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SortingColumnName">
            <summary>
            Gets the name of the column that drives sorting.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.IsSortingPersistent">
            <summary>
            Gets or sets a value indicating is persistence must be 
            </summary>
        </member>
        <member name="E:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CurrentPageChanged">
            <summary>
            Occurs every time the current page (its content) is changed.
            </summary>
        </member>
        <member name="E:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.TableInformationUpdated">
            <summary>
            Occurs every time information about the main table change.
            </summary>
        </member>
        <member name="E:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CheckMarkedRowsChanged">
            <summary>
            Occurs when the selected row list is update.
            </summary>
        </member>
        <member name="E:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.PageLoading">
            <summary>
            Produced when the current page starts loading in the background
            </summary>
        </member>
        <member name="E:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.PageLoaded">
            <summary>
            Occurs when current page is completely loaded.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SetRowCheckMarksValues(System.Collections.Generic.IList{System.Boolean})">
            <summary>
            Initiates the list of checkmarks.
            </summary>
            <param name="newValues">A list of boolean values corresponding to checks per row.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CheckMarkAllRows">
            <summary>
            Checks all rows.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.UncheckMarkAllRows">
            <summary>
            Unchecks all rows.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CheckOrUncheckMarksAllRow(System.Boolean)">
            <summary>
            Checks or unchecks all rows.
            </summary>
            <param name="check">If true, will check all rows, else will uncheck them.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SyncRowCheckMarksCount(System.Boolean)">
            <summary>
            Synchronizes checkmarks lists together. Triggers if count is different from source list count 
            (i.e. if source had been updated), except if 'force' parameter is set.
            </summary>
            <param name="force">Forces synchronization even if counts are the same with source.</param>
            <returns>True if lists where correctly synchronized.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.RowCheckMarks_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs whenever the row check marks collection changes.
            </summary>
            <param name="sender">The collection that contains row check marks.</param>
            <param name="e">Collection changed info.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.RowCheckMarks_IsCheckedChanged(System.Object,MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckedStateChangedEventArgs)">
            <summary>
            Occurs whenever a <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.CheckMark"/> object updates.
            </summary>
            <param name="sender">The object that sent the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SetSource(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Sets the source items on which to build pages.
            </summary>
            <param name="source">A collection of objects to represent.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.UpdateSource(System.Boolean)">
            <summary>
            Updates current source data.
            </summary>
            <param name="updateCurrentPage">Set to true to update current table page.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
            <summary>
            Called if source is notifiable and its collection or a property changed.
            </summary>
            <param name="managerType">Type of the manager we subscribed to.</param>
            <param name="sender">The object that sent the event.</param>
            <param name="e">Information about the event.</param>
            <returns>True if was able to perform the required operation.</returns>
            <remarks><see cref="T:System.Windows.IWeakEventListener"/> implementation.</remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SetLoadSizeThreshold(System.Int32)">
            <summary>
            Sets load size threshold, i.e. how many items there should be
            in a page to trigger background loading.
            </summary>
            <param name="newValue">A valid size in row counts.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SetLoadSize(System.Int32)">
            <summary>
            Sets load size, i.e. how many items are loaded per 
            loading method background invocation.
            </summary>
            <param name="newValue">A valid size in row counts.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.UpdateCurrentPage">
            <summary>
            Updates the currently available page.
            </summary>
            <returns>The current page, updated.</returns>
            <remarks>Core method.</remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.GeneratePagedTable(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Generates the current page as a <see cref="T:System.Data.DataTable"/>.
            </summary>
            <param name="partialSource">A portion of the source to be used for table generation
            that would represent the page.</param>
            <returns>A datable to be used and representing the source as a page.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.InitializeRows(System.Data.DataTable,System.Int32,System.Collections.Generic.IEnumerable{System.Object},System.Func{System.Boolean})">
            <summary>
            Updates already created rows with their initial values.
            Does not process ID or checkmarks 
            (should be processed prior to calling this method).
            </summary>
            <param name="table">The table to work on.</param>
            <param name="startIndex">Starting index on the passed partial source.</param>
            <param name="partialSource">The source of items where to get values from.</param>
            <param name="validityChecker">An optional function to check if we should quit or not this method during processing.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.InitializePageTableInBackground(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Initializes the current page in a background worker.
            </summary>
            <param name="sender">Unused.</param>
            <param name="e">Contains data information to start background processing.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.EndInitializePageTableInBackground(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            Called when a background loader is done.
            </summary>
            <param name="sender">The background loaded.</param>
            <param name="e">Background loader info.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CurrentTable_ColumnChanged(System.Object,System.Data.DataColumnChangeEventArgs)">
            <summary>
            Called whenever a value in the column changed (through user input).
            </summary>
            <param name="sender">Unused.</param>
            <param name="e">Unused.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.ReceiveWeakINotifyPropertyChangedEvent(System.ComponentModel.INotifyPropertyChanged,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called if a cell as <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> notifies a property change.
            </summary>
            <param name="sender">The <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> that sent the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.AddRow">
            <summary>
            Adds a new empty row in the source list.
            </summary>
            <returns>True if succeeded to add item, false otherwise.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.DeleteRow(System.Data.DataRowView)">
            <summary>
            Deletes a particular row item in the current page, if source type allows for deletion.
            </summary>
            <param name="rowViewToDelete">The view representation of the row to be deleted.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SortSourceBase(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Base function to enumerate all sortable lists at once (saves processing time).
            </summary>
            <param name="iEnumerable">The source list that will be processed.</param>
            <returns>A collection of ordered tuples with ID, checkmark item and source item.</returns>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager._sortInternal">
            <summary>
            Customizable extension of <see cref="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SortSourceBase(System.Collections.Generic.IEnumerable{System.Object})"/> that provides the effective 
            sorting method to be applied on it. 
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.GetIComparablePropertyValue(System.ComponentModel.PropertyDescriptor,System.Object,System.String)">
            <summary>
            Gets the property value of a passed item.
            </summary>
            <param name="property">A valid property descriptor of the property to be read.</param>
            <param name="item">The item on which the property must be read.</param>
            <param name="sortMemberPath">Optional property to be read on the read main property value.</param>
            <returns>A <see cref="T:System.IComparable"/> value to be used for sorting.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.GetIComparableExpandoPropertyValue(System.String,System.Dynamic.ExpandoObject,System.String)">
            <summary>
            Gets the dynamic property value of a passed expando item.
            </summary>
            <param name="propertyName">The name of the property to retrieve.</param>
            <param name="item">The item on which the property must be read.</param>
            <param name="sortMemberPath">Optional property to be read on the read main property value.</param>
            <returns>A <see cref="T:System.IComparable"/> value to be used for sorting.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.GetIComparableDynamicPropertyValue(Dynamitey.Invocation,System.Dynamic.IDynamicMetaObjectProvider,System.String)">
            <summary>
            Gets the dynamic property value of a passed dynamic item.
            </summary>
            <param name="getter">Cached getter function to be used for property value retrieval.</param>
            <param name="item">The item on which the property must be read.</param>
            <param name="sortMemberPath">Optional property to be read on the read main property value.</param>
            <returns>A <see cref="T:System.IComparable"/> value to be used for sorting.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.GetIComparablePropertyRecursively(System.Object,System.String)">
            <summary>
            Finds property value based on a member path and source object in a recursive manner.
            </summary>
            <param name="item">The item from which to follow the sort member path.</param>
            <param name="sortMemberPath">A property path of indefinite length that leads to the value to be
            used for sorting.</param>
            <returns>The value pointed out by the sort member path on the passed original item, null if object or path are not valid.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.SortItems(System.Int32,System.Boolean,System.String)">
            <summary>
            Sorts items based on a column list of values and order.
            </summary>
            <param name="columnIndex">The index of the column to sort.</param>
            <param name="ascendingOrder">Determines if ordering should be ascending or descending on values.</param>
            <param name="sortMemberPath">Optional property to be read on the read main property value.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.UpdateSortedLists">
            <summary>
            Sorts all sortable lists (source, checkmarks, IDs).
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.UpdateSortedCheckMarks">
            <summary>
            Sorts checker list only.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.UpdateSortedIndexes">
            <summary>
            Sorts ID list only.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.StopSorting">
            <summary>
            Stops sorting of the whole source data.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.HasNext">
            <summary>
            Indicates if a next page exists.
            </summary>
            <returns>True if a next page exists, false otherwise.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.GoNext">
            <summary>
            Navigate to next page.
            </summary>
            <returns>The page following the current one, if existing.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.HasPrevious">
            <summary>
            Indicates if a previous page exists.
            </summary>
            <returns>True if a previous page exists, false otherwise.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.GoPrevious">
            <summary>
            Navigate to previous page.
            </summary>
            <returns>The page defined before the current one, if existing.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.GoFirst">
            <summary>
            Navigate to the first page.
            </summary>
            <returns>The first page if existing.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.GoLast">
            <summary>
            Navigate to the last page.
            </summary>
            <returns>The last page if existing.</returns>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.PagingEnabledInternal">
            <summary>
            Gets a value indicating is paging is fully enabled.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.CorrectCurrentPageIndex">
            <summary>
            Corrects current page index in case it is invalid.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.GetMaxCurrentPageIndex">
            <summary>
            Gets the maximum item index of a given page.
            </summary>
            <returns>The maximum index of the page.</returns>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.DataGrid.DataTablePagingManager.UpdateCurrentPageRange">
            <summary>
            Updates the current page range.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.Filtering.TextFilter">
            <summary>
            Provides a comparison mechanism to match a filter against an item 
            property values.
            </summary>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.CollectionChangedWeakEventListener">
            <summary>
            A listener for <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> event that can be paused and disposed.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.CollectionChangedWeakEventListener.#ctor(System.Collections.IEnumerable,System.Action{System.Collections.IEnumerable})">
            <summary>
            Constructs a new <see cref="T:MaterialDesignThemes.Wpf.AddOns.Utils.CollectionChangedWeakEventListener"/> on a  <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> object.
            </summary>
            <param name="collection">The collection to listen for changed events.</param>
            <param name="onChange">A method that will be called whenever the collection changes.</param>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.CollectionChangedWeakEventListener.Pause">
            <summary>
            Disables the current listener.
            </summary>
            <remarks>Reactivation must be performed through <see cref="M:MaterialDesignThemes.Wpf.AddOns.Utils.CollectionChangedWeakEventListener.Resume"/> method.</remarks>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.CollectionChangedWeakEventListener.Resume">
            <summary>
            Reactivates the current listener after a call to <see cref="M:MaterialDesignThemes.Wpf.AddOns.Utils.CollectionChangedWeakEventListener.Pause"/> method.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.CollectionChangedWeakEventListener.Dispose">
            <summary>
            Disposes the currency listener.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.CollectionChangedWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
            <summary>
            Called if source is notifiable and its collection or a property changed.
            </summary>
            <param name="managerType">Type of the manager we subscribed to.</param>
            <param name="sender">The object that sent the event.</param>
            <param name="e">Information about the event.</param>
            <returns>True if was able to perform the required operation.</returns>
            <remarks><see cref="T:System.Windows.IWeakEventListener"/> implementation.</remarks>
        </member>
        <member name="T:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen">
            <summary>
             Represents a display device or multiple display devices on a single system.
             Based on http://referencesource.microsoft.com/#System.Windows.Forms/winforms/Managed/System/WinForms/Screen.cs
             Adapted from https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit to be made public.
             </summary>
        </member>
        <member name="F:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen._workingArea">
            <summary>
            Available working area on the screen. This excludes taskbars and other
            docked windows.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.AllScreens">
            <summary>
            Gets an array of all of the displays on the system.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.Bounds">
            <summary>
            Gets the bounds of the display.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.DeviceName">
            <summary>
            Gets the device name associated with a display.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.Primary">
            <summary>
            Gets a value indicating whether a particular display is the primary device.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.PrimaryScreen">
            <summary>
            Gets the primary display.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.WorkingArea">
            <summary>
            Gets the working area of the screen.
            </summary>
        </member>
        <member name="P:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.DesktopChangedCount">
            <summary>
            Screen instances call this property to determine
            if their WorkingArea cache needs to be invalidated.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.Equals(System.Object)">
            <summary>
            Specifies a value that indicates whether the specified object is equal to this one.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.FromPoint(System.Windows.Point)">
            <summary>
            Retrieves a <see cref='T:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen'/> for the monitor that contains the specified point.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.FromRect(System.Windows.Rect)">
            <summary>
            Retrieves a <see cref='T:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen'/> for the monitor that contains the largest region of the Rect.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.GetWorkingArea(System.Windows.Point)">
            <summary>
             Retrieves the working area for the monitor that is closest to the specified point.
             </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.GetWorkingArea(System.Windows.Rect)">
            <summary>
             Retrieves the working area for the monitor that contains the largest region of the specified Rect.
             </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.GetBounds(System.Windows.Point)">
            <summary>
             Retrieves the bounds of the monitor that is closest to the specified point.
             </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.GetBounds(System.Windows.Rect)">
            <summary>
            Retrieves the bounds of the monitor that contains the largest region of the specified Rect.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.GetHashCode">
            <summary>
            Computes and retrieves a hash code for an object.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.OnDisplaySettingsChanging(System.Object,System.EventArgs)">
            <summary>
            Called by the SystemEvents class when our display settings are
            changing.  We cache screen information and at this point we must
            invalidate our cache.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.OnUserPreferenceChanged(System.Object,Microsoft.Win32.UserPreferenceChangedEventArgs)">
            <summary>
            Called by the SystemEvents class when our display settings have
            changed.  Here, we increment a static counter that Screen instances
            can check against to invalidate their cache.
            </summary>
        </member>
        <member name="M:MaterialDesignThemes.Wpf.AddOns.Utils.Screen.Screen.ToString">
            <summary>
            Retrieves a string representing this object.
            </summary>
        </member>
    </members>
</doc>
